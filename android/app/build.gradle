def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '300'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.2.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 33
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.aepp.box"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        ndk {
            abiFilters 'arm64-v8a','armeabi-v7a'
        }
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']

        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']

        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def version = variant.versionName // 版本号
            def buildType = variant.name // 包类型，debug 还是 release
            def createTime = new Date().format('yyyyMMddHHmmss') // 打包时间 2021_09_25_16_45_52
            if (buildType == "debug") {
                outputFileName = "box_wallet_${buildType}_${version}_${createTime}.apk"
            }
            if (buildType == "release") {
                outputFileName = "box_wallet_${buildType}_${version}_${createTime}.apk"
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
}
def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
}

static def packageName(String applicationId) {
//    int last = applicationId.lastIndexOf(".")
//    if (last!=-1){
//        return applicationId.substring(++last)
//    }
    return applicationId

}


//
//configurations.all {
//    resolutionStrategy {
//        resolutionStrategy.eachDependency { details ->
//            if (details.requested.group == 'androidx.core') {
//                details.useVersion "1.0.2"
//            }
//            if (details.requested.group == 'androidx.lifecycle') {
//                details.useVersion "2.0.0"
//            }
//            if (details.requested.group == 'androidx.versionedparcelable') {
//                details.useVersion "1.0.0"
//            }
//            if (details.requested.group == 'androidx.fragment') {
//                details.useVersion "1.0.0"
//            }
//            if (details.requested.group == 'androidx.appcompat') {
//                details.useVersion "1.0.1"
//            }
//            if (details.requested.group == 'androidx.core' && !details.requested.name.contains('androidx')) {
//                details.useVersion "1.0.1"
//            }
//        }
//    }
//}
