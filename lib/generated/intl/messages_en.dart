// DO NOT EDIT. This is code generated via package:intl/generate_localized.dart
// This is a library that provides messages for a en locale. All the
// messages from the main program should be duplicated here with the same
// function name.

// Ignore issues from commonly used lints in this file.
// ignore_for_file:unnecessary_brace_in_string_interps, unnecessary_new
// ignore_for_file:prefer_single_quotes,comment_references, directives_ordering
// ignore_for_file:annotate_overrides,prefer_generic_function_type_aliases
// ignore_for_file:unused_import, file_names

import 'package:intl/intl.dart';
import 'package:intl/message_lookup_by_library.dart';

final messages = new MessageLookup();

typedef String MessageIfAbsent(String messageStr, List<dynamic> args);

class MessageLookup extends MessageLookupByLibrary {
  String get localeName => 'en';

  final messages = _notInlinedMessages(_notInlinedMessages);
  static _notInlinedMessages(_) => <String, Function> {
    "account_login_page_conform" : MessageLookupByLibrary.simpleMessage("Confirm"),
    "account_login_page_input_hint" : MessageLookupByLibrary.simpleMessage("Mnemonic phrase is used to log in to the wallet, fill in 12 words in order, and use spaces to fill in between the words"),
    "account_login_page_input_mnemonic" : MessageLookupByLibrary.simpleMessage("Please enter the mnemonic phrase"),
    "ae_status_aensBid" : MessageLookupByLibrary.simpleMessage("Domain is being bound"),
    "ae_status_aensClaim" : MessageLookupByLibrary.simpleMessage("Domain is being auctioned"),
    "ae_status_aensPreclaim" : MessageLookupByLibrary.simpleMessage("Domain is being claimed"),
    "ae_status_aensUpdate" : MessageLookupByLibrary.simpleMessage("The domain name is being updated"),
    "ae_status_allowance" : MessageLookupByLibrary.simpleMessage("Query authorization information"),
    "ae_status_broadcast" : MessageLookupByLibrary.simpleMessage("Broadcasting"),
    "ae_status_change_allowance" : MessageLookupByLibrary.simpleMessage("Change the number of authorizations"),
    "ae_status_contractCall" : MessageLookupByLibrary.simpleMessage("Contract Calling"),
    "ae_status_contractEncodeCall" : MessageLookupByLibrary.simpleMessage("Contract is being compiled"),
    "ae_status_create_allowance" : MessageLookupByLibrary.simpleMessage("Set the number of authorizations"),
    "ae_status_decode" : MessageLookupByLibrary.simpleMessage("Analyzing results"),
    "aens_detail_page_add" : MessageLookupByLibrary.simpleMessage("Price Increase"),
    "aens_detail_page_balance" : MessageLookupByLibrary.simpleMessage("Price"),
    "aens_detail_page_height" : MessageLookupByLibrary.simpleMessage("Current Height"),
    "aens_detail_page_name" : MessageLookupByLibrary.simpleMessage("Name"),
    "aens_detail_page_over" : MessageLookupByLibrary.simpleMessage("Distance end"),
    "aens_detail_page_owner" : MessageLookupByLibrary.simpleMessage("Owner"),
    "aens_detail_page_update" : MessageLookupByLibrary.simpleMessage("Update"),
    "aens_list_page_item_address" : MessageLookupByLibrary.simpleMessage("address"),
    "aens_list_page_item_time_end" : MessageLookupByLibrary.simpleMessage("Distance expires"),
    "aens_list_page_item_time_over" : MessageLookupByLibrary.simpleMessage("Distance end"),
    "aens_my_page_title" : MessageLookupByLibrary.simpleMessage("My Name"),
    "aens_my_page_title_tab_1" : MessageLookupByLibrary.simpleMessage("Bidding"),
    "aens_my_page_title_tab_2" : MessageLookupByLibrary.simpleMessage("Registered"),
    "aens_page_title" : MessageLookupByLibrary.simpleMessage("Name System"),
    "aens_page_title_my" : MessageLookupByLibrary.simpleMessage("My"),
    "aens_page_title_tab_1" : MessageLookupByLibrary.simpleMessage("Bidding"),
    "aens_page_title_tab_2" : MessageLookupByLibrary.simpleMessage("Top Price"),
    "aens_page_title_tab_3" : MessageLookupByLibrary.simpleMessage("Expiration"),
    "aens_register_page_create" : MessageLookupByLibrary.simpleMessage("Create"),
    "aens_register_page_name" : MessageLookupByLibrary.simpleMessage("Name"),
    "aens_register_page_title" : MessageLookupByLibrary.simpleMessage("Register an eternal blockchain domain name you want"),
    "common_day" : MessageLookupByLibrary.simpleMessage("day"),
    "common_hours" : MessageLookupByLibrary.simpleMessage("Hours"),
    "common_points" : MessageLookupByLibrary.simpleMessage("Minutes"),
    "defi_card_balance" : MessageLookupByLibrary.simpleMessage("Balance (AE)"),
    "defi_card_count" : MessageLookupByLibrary.simpleMessage("pledge amount"),
    "defi_card_get" : MessageLookupByLibrary.simpleMessage("Receive"),
    "defi_card_hint" : MessageLookupByLibrary.simpleMessage("Mining Rules"),
    "defi_card_hint_base" : MessageLookupByLibrary.simpleMessage("Basic introduction"),
    "defi_card_hint_base_content" : MessageLookupByLibrary.simpleMessage("It is a pledged mining written based on the AE blockchain AEX9 protocol extension. The whole process is open and transparent. Users can exchange AE for ABC, the only pass for ABC user Box aepp ecology. It is an important part of the ecology behind, The value of ABC is strongly correlated with the number of pledged AEs\nThe total amount of ABC is 50 million, and all ABC is used for mining output. The team and ecological fund will allocate 15% of the total and lock the warehouse, and the unlocking will increase with the mining output. Unlock gradually"),
    "defi_card_hint_day" : MessageLookupByLibrary.simpleMessage("Period-Multiple"),
    "defi_card_hint_day_content1" : MessageLookupByLibrary.simpleMessage("Quantity"),
    "defi_card_hint_day_content2" : MessageLookupByLibrary.simpleMessage("Period"),
    "defi_card_hint_day_content3" : MessageLookupByLibrary.simpleMessage("Income"),
    "defi_card_hint_info" : MessageLookupByLibrary.simpleMessage("Issuance Algorithm"),
    "defi_card_hint_info_content" : MessageLookupByLibrary.simpleMessage("(Pledge quantity*period*period daily income* pledge multiple*mining multiple) / 1000 = income"),
    "defi_card_hint_mine" : MessageLookupByLibrary.simpleMessage("Total pledge-multiple"),
    "defi_card_hint_mine_content1" : MessageLookupByLibrary.simpleMessage("Total pledge amount (AE)"),
    "defi_card_hint_mine_content2" : MessageLookupByLibrary.simpleMessage("Multiple"),
    "defi_card_hint_out" : MessageLookupByLibrary.simpleMessage("Mining output-multiple"),
    "defi_card_hint_out_content1" : MessageLookupByLibrary.simpleMessage("Total number of mining"),
    "defi_card_hint_out_content2" : MessageLookupByLibrary.simpleMessage("Multiple"),
    "defi_card_in_title" : MessageLookupByLibrary.simpleMessage("Enter the amount you want to pledge"),
    "defi_card_in_title_content" : MessageLookupByLibrary.simpleMessage("The amount of pledge"),
    "defi_card_mine" : MessageLookupByLibrary.simpleMessage("The pledge"),
    "defi_card_my_get_hint" : MessageLookupByLibrary.simpleMessage("My Earnings (ABC)"),
    "defi_card_out" : MessageLookupByLibrary.simpleMessage("Extract"),
    "defi_card_out_title" : MessageLookupByLibrary.simpleMessage("Enter the amount you want to withdraw"),
    "defi_card_out_title_content" : MessageLookupByLibrary.simpleMessage("Retrieve quantity"),
    "defi_card_time" : MessageLookupByLibrary.simpleMessage("pledge time"),
    "defi_card_time_day" : MessageLookupByLibrary.simpleMessage("Day"),
    "defi_head_card_all_token" : MessageLookupByLibrary.simpleMessage("Total Lockup (AE)"),
    "defi_head_card_my_token" : MessageLookupByLibrary.simpleMessage("You are locked (AE)"),
    "defi_raking_1" : MessageLookupByLibrary.simpleMessage("Rank"),
    "defi_raking_2" : MessageLookupByLibrary.simpleMessage("Address"),
    "defi_raking_3" : MessageLookupByLibrary.simpleMessage("Scale"),
    "defi_raking_4" : MessageLookupByLibrary.simpleMessage("Amount (ABC)"),
    "defi_ranking_content" : MessageLookupByLibrary.simpleMessage("Is the output (ABC)"),
    "defi_record_item_btn_continue" : MessageLookupByLibrary.simpleMessage("Renew"),
    "defi_record_item_btn_unlock" : MessageLookupByLibrary.simpleMessage("Unlock"),
    "defi_record_item_day_time" : MessageLookupByLibrary.simpleMessage("Renewal countdown"),
    "defi_record_item_lock_number" : MessageLookupByLibrary.simpleMessage("Locked position (AE)"),
    "defi_record_item_lock_time" : MessageLookupByLibrary.simpleMessage("Lock"),
    "defi_record_item_lock_time_day" : MessageLookupByLibrary.simpleMessage("day"),
    "defi_record_item_mine_number" : MessageLookupByLibrary.simpleMessage("Mining Quantity (ABC)"),
    "defi_record_item_status" : MessageLookupByLibrary.simpleMessage("Status"),
    "defi_record_item_status_continue" : MessageLookupByLibrary.simpleMessage("Renewable"),
    "defi_record_item_status_lock" : MessageLookupByLibrary.simpleMessage("Mining"),
    "defi_record_item_status_unlock" : MessageLookupByLibrary.simpleMessage("UnLockable"),
    "defi_record_item_status_unlock_waiting" : MessageLookupByLibrary.simpleMessage("Unlock Waiting"),
    "defi_record_item_time" : MessageLookupByLibrary.simpleMessage("Unlock Countdown"),
    "defi_record_old_title" : MessageLookupByLibrary.simpleMessage("Being pledged - Old"),
    "defi_record_title" : MessageLookupByLibrary.simpleMessage("Being pledged"),
    "defi_record_title_right" : MessageLookupByLibrary.simpleMessage("Old contract"),
    "defi_title" : MessageLookupByLibrary.simpleMessage("Lock AE to in mining \nEarn ABC"),
    "defi_title_record" : MessageLookupByLibrary.simpleMessage("Record"),
    "dialog_cancel" : MessageLookupByLibrary.simpleMessage("Cancel"),
    "dialog_conform" : MessageLookupByLibrary.simpleMessage("Confirm"),
    "dialog_defi_continue_sucess" : MessageLookupByLibrary.simpleMessage("Successful renewal"),
    "dialog_defi_get" : MessageLookupByLibrary.simpleMessage("Received successfully"),
    "dialog_defi_get_msg" : MessageLookupByLibrary.simpleMessage("Successfully received"),
    "dialog_defi_lock_sucess" : MessageLookupByLibrary.simpleMessage("Locked successfully"),
    "dialog_defi_token_low" : MessageLookupByLibrary.simpleMessage("A pledge requires a minimum of 100 AE"),
    "dialog_defi_unlock_sucess" : MessageLookupByLibrary.simpleMessage("Unlocked successfully"),
    "dialog_dismiss" : MessageLookupByLibrary.simpleMessage("Cancel"),
    "dialog_dismiss_sucess" : MessageLookupByLibrary.simpleMessage("Cancellation successful"),
    "dialog_hint" : MessageLookupByLibrary.simpleMessage("Hint"),
    "dialog_hint_add_error" : MessageLookupByLibrary.simpleMessage("Fare increase failed"),
    "dialog_hint_check_error" : MessageLookupByLibrary.simpleMessage("Verification failed"),
    "dialog_hint_check_error_content" : MessageLookupByLibrary.simpleMessage("The security password is incorrect"),
    "dialog_hint_register_error" : MessageLookupByLibrary.simpleMessage("Register failed"),
    "dialog_hint_send_error" : MessageLookupByLibrary.simpleMessage("Send failed"),
    "dialog_hint_update_error" : MessageLookupByLibrary.simpleMessage("Update failed"),
    "dialog_login_user_no_save" : MessageLookupByLibrary.simpleMessage("Login user does not provide mnemonic backup"),
    "dialog_node_set_error" : MessageLookupByLibrary.simpleMessage("Node address or compiler address is not available"),
    "dialog_node_set_sucess" : MessageLookupByLibrary.simpleMessage("Save successfully"),
    "dialog_save_error" : MessageLookupByLibrary.simpleMessage("Backup failed"),
    "dialog_save_error_hint" : MessageLookupByLibrary.simpleMessage("Please enter the mnemonic phrase in the normal order."),
    "dialog_save_go" : MessageLookupByLibrary.simpleMessage("Go to backup"),
    "dialog_save_sucess" : MessageLookupByLibrary.simpleMessage("Backup successful"),
    "dialog_save_sucess_hint" : MessageLookupByLibrary.simpleMessage("You have successfully backed up the mnemonic phrase, please keep it safe. We will delete the local mnemonic phrase to make your account safer."),
    "dialog_save_word" : MessageLookupByLibrary.simpleMessage("Please backup the mnemonic phrase"),
    "dialog_save_word_hint" : MessageLookupByLibrary.simpleMessage("For the safety of your assets, please back up your mnemonic phrase in time. If you lose your mnemonic phrase, your wallet and assets will also be lost"),
    "dialog_send_sucess" : MessageLookupByLibrary.simpleMessage("Successful initiation"),
    "dialog_statement_btn" : MessageLookupByLibrary.simpleMessage("Agree"),
    "dialog_statement_content" : MessageLookupByLibrary.simpleMessage("Box aepp code is completely open source, it complies with the open source agreement, and the ecological project initiated by the Chinese community is non-profit. So please confirm the risk yourself! Box aepp will not collect your private key, but does not guarantee special circumstances (Such as bugs, hacker attacks), we will not make any compensation if the wallet is lost or locked. Please take your own risk. Agree means that you approve the disclaimer. If you disagree, please uninstall by yourself"),
    "dialog_statement_title" : MessageLookupByLibrary.simpleMessage("Disclaimer"),
    "dialog_swap_sucess" : MessageLookupByLibrary.simpleMessage("Swap successfully"),
    "dialog_tx_title" : MessageLookupByLibrary.simpleMessage("Please confirm the information."),
    "dialog_update_content" : MessageLookupByLibrary.simpleMessage("A new version is available, please download the update"),
    "dialog_update_title" : MessageLookupByLibrary.simpleMessage("Discover new version"),
    "hint_broadcast_sucess" : MessageLookupByLibrary.simpleMessage("Broadcast successful"),
    "hint_broadcast_sucess_hint" : MessageLookupByLibrary.simpleMessage("Synchronizing node information, it is estimated that the synchronization will be successful in 5 minutes"),
    "hint_error_address" : MessageLookupByLibrary.simpleMessage("Address Error"),
    "hint_error_camera_permissions" : MessageLookupByLibrary.simpleMessage("No camera permission"),
    "home_page_function" : MessageLookupByLibrary.simpleMessage("Common Functions"),
    "home_page_function_defi" : MessageLookupByLibrary.simpleMessage("Defi"),
    "home_page_function_defi_go" : MessageLookupByLibrary.simpleMessage("GO"),
    "home_page_function_games" : MessageLookupByLibrary.simpleMessage("Games"),
    "home_page_function_name" : MessageLookupByLibrary.simpleMessage("Name"),
    "home_page_function_name_count" : MessageLookupByLibrary.simpleMessage("Burning"),
    "home_page_function_name_count_number" : MessageLookupByLibrary.simpleMessage(""),
    "home_page_function_names" : MessageLookupByLibrary.simpleMessage("Name System"),
    "home_page_function_receive" : MessageLookupByLibrary.simpleMessage("Receive"),
    "home_page_function_send" : MessageLookupByLibrary.simpleMessage("Send"),
    "home_page_my_count" : MessageLookupByLibrary.simpleMessage("My Assets"),
    "home_page_transaction" : MessageLookupByLibrary.simpleMessage("Transaction"),
    "home_page_transaction_conform" : MessageLookupByLibrary.simpleMessage("Confirmation"),
    "loading_widget_no_data" : MessageLookupByLibrary.simpleMessage("No data yet"),
    "loading_widget_no_net" : MessageLookupByLibrary.simpleMessage("Network error, please confirm and try again"),
    "loading_widget_no_net_try" : MessageLookupByLibrary.simpleMessage("Retry"),
    "login_page_create" : MessageLookupByLibrary.simpleMessage("Create a new account"),
    "login_page_login" : MessageLookupByLibrary.simpleMessage("Login"),
    "mnemonic_confirm_content" : MessageLookupByLibrary.simpleMessage("In order to confirm that your mnemonic phrase is copied correctly, please click the mnemonic phrase in the corresponding order"),
    "mnemonic_confirm_title" : MessageLookupByLibrary.simpleMessage("Please confirm the mnemonic phrase"),
    "mnemonic_copy_confrom" : MessageLookupByLibrary.simpleMessage("I have saved it safely"),
    "mnemonic_copy_content" : MessageLookupByLibrary.simpleMessage("The mnemonic phrase is used to restore the wallet. Copy the following 12 words on the paper in order and save them in a safe place"),
    "mnemonic_copy_hint1" : MessageLookupByLibrary.simpleMessage("Don\'t take a screenshot!"),
    "mnemonic_copy_hint2" : MessageLookupByLibrary.simpleMessage("If someone gets your mnemonic phrase, they will get your assets directly!"),
    "mnemonic_copy_title" : MessageLookupByLibrary.simpleMessage("Please copy the mnemonic phrase"),
    "password_widget_conform" : MessageLookupByLibrary.simpleMessage("Confirm"),
    "password_widget_input_password" : MessageLookupByLibrary.simpleMessage("Enter a secure password"),
    "password_widget_set_password" : MessageLookupByLibrary.simpleMessage("Set a secure password"),
    "scan_page_content" : MessageLookupByLibrary.simpleMessage("Scan the QR code for payment"),
    "setting_page_compiler_url" : MessageLookupByLibrary.simpleMessage("Editor Address"),
    "setting_page_item_language" : MessageLookupByLibrary.simpleMessage("Language"),
    "setting_page_item_logout" : MessageLookupByLibrary.simpleMessage("Logout"),
    "setting_page_item_save" : MessageLookupByLibrary.simpleMessage("Save mnemonic phrase"),
    "setting_page_item_version" : MessageLookupByLibrary.simpleMessage("Version"),
    "setting_page_node_reset" : MessageLookupByLibrary.simpleMessage("Reset"),
    "setting_page_node_save" : MessageLookupByLibrary.simpleMessage("Save"),
    "setting_page_node_set" : MessageLookupByLibrary.simpleMessage("Node Configuration"),
    "setting_page_node_url" : MessageLookupByLibrary.simpleMessage("Node Address"),
    "setting_page_title" : MessageLookupByLibrary.simpleMessage("Settings"),
    "swap_item_1" : MessageLookupByLibrary.simpleMessage("Premium"),
    "swap_item_2" : MessageLookupByLibrary.simpleMessage("Swap quantity"),
    "swap_item_3" : MessageLookupByLibrary.simpleMessage("Amount you paid"),
    "swap_item_4" : MessageLookupByLibrary.simpleMessage("Swap now"),
    "swap_item_5" : MessageLookupByLibrary.simpleMessage("Cancel"),
    "swap_send_1" : MessageLookupByLibrary.simpleMessage("The amount I exchanged"),
    "swap_send_2" : MessageLookupByLibrary.simpleMessage("The amount paid by the other party"),
    "swap_send_3" : MessageLookupByLibrary.simpleMessage("Initiate exchange"),
    "swap_send_4" : MessageLookupByLibrary.simpleMessage("Exchange Instructions"),
    "swap_send_5" : MessageLookupByLibrary.simpleMessage("Box Swap is a decentralized exchange that supports the conversion between AEX9 tokens and AE. The exchange process and cancellation transaction fee will be charged 0.4%, and 50% of the handling fee will be airdropped to ABC users regularly according to the position ratio , Since all operations are performed on the chain, the on-chain fee will be paid by oneself. The exchange amount AEX9 and AE are both 1, and the maximum is 100,000. Please initiate the exchange based on your needs."),
    "swap_tab_1" : MessageLookupByLibrary.simpleMessage("Initiate Swap"),
    "swap_tab_2" : MessageLookupByLibrary.simpleMessage("My Swap"),
    "swap_text_hint" : MessageLookupByLibrary.simpleMessage("Please enter the quantity"),
    "swap_title" : MessageLookupByLibrary.simpleMessage("Swap"),
    "swap_title_my" : MessageLookupByLibrary.simpleMessage("My Swap"),
    "swap_title_send" : MessageLookupByLibrary.simpleMessage("Initiate exchange"),
    "tab_1" : MessageLookupByLibrary.simpleMessage("Home"),
    "tab_2" : MessageLookupByLibrary.simpleMessage("Swap"),
    "tab_3" : MessageLookupByLibrary.simpleMessage("Aepp"),
    "tab_node_error" : MessageLookupByLibrary.simpleMessage("Node not use"),
    "token_receive_page_copy" : MessageLookupByLibrary.simpleMessage("Copy"),
    "token_receive_page_copy_sucess" : MessageLookupByLibrary.simpleMessage("Successful"),
    "token_receive_page_title" : MessageLookupByLibrary.simpleMessage("Share your address with the recipient"),
    "token_send_one_page_address" : MessageLookupByLibrary.simpleMessage("Address"),
    "token_send_one_page_next" : MessageLookupByLibrary.simpleMessage("Next"),
    "token_send_one_page_qr" : MessageLookupByLibrary.simpleMessage("Scan Code"),
    "token_send_one_page_title" : MessageLookupByLibrary.simpleMessage("1/2 Please enter the receiving address"),
    "token_send_two_page_all" : MessageLookupByLibrary.simpleMessage("All"),
    "token_send_two_page_balance" : MessageLookupByLibrary.simpleMessage("Balance"),
    "token_send_two_page_coin" : MessageLookupByLibrary.simpleMessage("Transfer Coin"),
    "token_send_two_page_conform" : MessageLookupByLibrary.simpleMessage("Confirm"),
    "token_send_two_page_from" : MessageLookupByLibrary.simpleMessage("From"),
    "token_send_two_page_number" : MessageLookupByLibrary.simpleMessage("Transfer amount"),
    "token_send_two_page_title" : MessageLookupByLibrary.simpleMessage("2/2 please enter the number to send"),
    "token_send_two_page_to" : MessageLookupByLibrary.simpleMessage("To")
  };
}
