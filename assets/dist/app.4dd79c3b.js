(function(){var e={2271:function(e,a,t){"use strict";t.r(a);var n=t(8081),s=t.n(n),r=t(3645),i=t.n(r),o=i()(s());o.push([e.id,"#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center;color:#2c3e50;margin-top:60px}",""]),a["default"]=o},2492:function(e,a,t){"use strict";var n=t(3862),s=t(3396);function r(e,a,t,n,r,i){const o=(0,s.up)("AE"),l=(0,s.up)("CFX");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(o),(0,s.Wm)(l,{msg:"B"})],64)}var i=t(7139);const o=(0,s._)("br",null,null,-1),l=(0,s._)("br",null,null,-1),c=(0,s._)("br",null,null,-1),d=(0,s._)("br",null,null,-1),m=(0,s._)("br",null,null,-1),u=(0,s._)("br",null,null,-1);function p(e,a,t,r,p,y){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Uk)((0,i.zw)(p.msg)+" ",1),o,(0,s.wy)((0,s._)("textarea",{rows:"10",cols:"100","onUpdate:modelValue":a[0]||(a[0]=e=>p.textdata=e)},null,512),[[n.nr,p.textdata]]),l,(0,s._)("button",{onClick:a[1]||(a[1]=e=>y.channelCall(p.textdata))},"TEST"),c,(0,s.wy)((0,s._)("textarea",{rows:"1",cols:"100","onUpdate:modelValue":a[2]||(a[2]=e=>p.input=e)},null,512),[[n.nr,p.input]]),d,(0,s._)("button",{onClick:a[3]||(a[3]=e=>y.formatAmount(p.input))},"FORMAT"),m,(0,s._)("button",{onClick:a[4]||(a[4]=e=>y.debug())},"DEBUG"),u,(0,s.Uk)(" "+(0,i.zw)(p.formatData),1)])}t(6699);var y=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"Transfer":["address","address","int"]},{"Allowance":["address","address","int"]},{"Burn":["address","int"]},{"Mint":["address","int"]},{"Swap":["address","int"]}]},"functions":[{"arguments":[],"name":"aex9_extensions","payable":false,"returns":{"list":["string"]},"stateful":false},{"arguments":[{"name":"name","type":"string"},{"name":"decimals","type":"int"},{"name":"symbol","type":"string"},{"name":"initial_owner_balance","type":{"option":["int"]}}],"name":"init","payable":false,"returns":"FungibleTokenFull.state","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"FungibleTokenFull.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"balances","payable":false,"returns":"FungibleTokenFull.balances","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[],"name":"swapped","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[],"name":"allowances","payable":false,"returns":"FungibleTokenFull.allowances","stateful":false},{"arguments":[{"name":"allowance_accounts","type":"FungibleTokenFull.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"}],"name":"allowance_for_caller","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"},{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value","type":"int"}],"name":"create_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value_change","type":"int"}],"name":"change_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"}],"name":"reset_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"value","type":"int"}],"name":"burn","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"swap","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"account","type":"address"}],"name":"check_swap","payable":false,"returns":"int","stateful":true}],"kind":"contract_main","name":"FungibleTokenFull","payable":false,"state":{"record":[{"name":"owner","type":"address"},{"name":"total_supply","type":"int"},{"name":"balances","type":"FungibleTokenFull.balances"},{"name":"meta_info","type":"FungibleTokenFull.meta_info"},{"name":"allowances","type":"FungibleTokenFull.allowances"},{"name":"swapped","type":{"map":["address","int"]}}]},"type_defs":[{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]},{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"balances","typedef":{"map":["address","int"]},"vars":[]},{"name":"allowances","typedef":{"map":["FungibleTokenFull.allowance_accounts","int"]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"Option","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\n\\nmain contract FungibleTokenFull =\\n  record state = {owner : address,total_supply : int,balances : FungibleTokenFull.balances,meta_info : FungibleTokenFull.meta_info,allowances : FungibleTokenFull.allowances,swapped : map(address, int)}\\n  datatype event = Transfer(address, address, int) | Allowance(address, address, int) | Burn(address, int) | Mint(address, int) | Swap(address, int)\\n  record meta_info = {name : string,symbol : string,decimals : int}\\n  record allowance_accounts = {from_account : address,for_account : address}\\n  type balances = map(address, int)\\n  type allowances = map(FungibleTokenFull.allowance_accounts, int)\\n  entrypoint aex9_extensions : () => list(string)\\n  entrypoint init : (string, int, string, option(int)) => FungibleTokenFull.state\\n  entrypoint meta_info : () => FungibleTokenFull.meta_info\\n  entrypoint total_supply : () => int\\n  entrypoint owner : () => address\\n  entrypoint balances : () => FungibleTokenFull.balances\\n  entrypoint balance : (address) => option(int)\\n  entrypoint swapped : () => map(address, int)\\n  entrypoint allowances : () => FungibleTokenFull.allowances\\n  entrypoint allowance : (FungibleTokenFull.allowance_accounts) => option(int)\\n  entrypoint allowance_for_caller : (address) => option(int)\\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\\n  stateful entrypoint create_allowance : (address, int) => unit\\n  stateful entrypoint change_allowance : (address, int) => unit\\n  stateful entrypoint reset_allowance : (address) => unit\\n  stateful entrypoint transfer : (address, int) => unit\\n  stateful entrypoint burn : (int) => unit\\n  stateful entrypoint swap : () => unit\\n  stateful entrypoint check_swap : (address) => int\\n"}'),g=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"AddMarketEvent":["address","string"]},{"SubmitAnswerEvent":["address","string","address","int"]},{"ReceiveReward":["address","int","int"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"VegasMarketContact.state","stateful":true},{"arguments":[{"name":"content","type":"string"},{"name":"source_url","type":"string"},{"name":"min_amount","type":"int"},{"name":"over_height","type":"int"},{"name":"answers","type":{"list":["VegasMarketContact.answer"]}}],"name":"add_market","payable":false,"returns":"VegasMarketContact.market","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"answer_index","type":"int"}],"name":"submit_answer","payable":true,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"stop_market","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"market_index","type":"int"}],"name":"provide_answer","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"result_index","type":"int"}],"name":"private_update_market_progress_to_over","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"receive_reward","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"add_certificate","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"delete_certificate","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"account","type":"address"},{"name":"name","type":"string"}],"name":"add_aggregator_user","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"delete_aggregator_user","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"chagne_owner","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"config","type":"VegasMarketContact.config"}],"name":"update_config","payable":false,"returns":"VegasMarketContact.config","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"is_private","type":"bool"}],"name":"get_markets_start","payable":false,"returns":{"map":["string","VegasMarketContact.market"]},"stateful":false},{"arguments":[],"name":"get_markets_referee","payable":false,"returns":{"map":["string","VegasMarketContact.market"]},"stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_market_detail","payable":false,"returns":"VegasMarketContact.market_detail","stateful":false},{"arguments":[],"name":"get_all_count","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_all_amount","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"get_oracle_market_provide_count","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_market","payable":false,"returns":"VegasMarketContact.market","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"is_user_markets_receive_record","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"is_user_markets_record","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_user_markets_record_result","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_user_markets_record","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[{"name":"market_address","type":"address"}],"name":"get_markets_start_size","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"is_oracle_market_record","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"get_aggregator_user","payable":false,"returns":{"map":["address","string"]},"stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"get_oracle_market_record","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"get_market_records","payable":false,"returns":{"list":["VegasMarketContact.market_rocord"]},"stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"get_market_records_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_config","payable":false,"returns":"VegasMarketContact.config","stateful":false},{"arguments":[],"name":"get_owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"get_state","payable":false,"returns":"VegasMarketContact.state","stateful":false},{"arguments":[{"name":"x#1","type":{"list":["int"]}}],"name":"is_repeat","payable":false,"returns":"bool","stateful":false}],"kind":"contract_main","name":"VegasMarketContact","payable":true,"state":{"record":[{"name":"markets","type":{"map":["address",{"map":["string","VegasMarketContact.market"]}]}},{"name":"markets_start","type":{"map":["address",{"map":["string","VegasMarketContact.market"]}]}},{"name":"markets_record","type":{"map":["address",{"list":["VegasMarketContact.market_rocord"]}]}},{"name":"user_markets_record","type":{"map":["address",{"map":["string",{"map":["address","int"]}]}]}},{"name":"user_markets_receive_record","type":{"map":["address",{"map":["string",{"map":["address","int"]}]}]}},{"name":"oracle_market","type":{"map":["string",{"list":["int"]}]}},{"name":"oracle_market_count","type":{"map":["string","int"]}},{"name":"oracle_market_record","type":{"map":["string",{"map":["address","int"]}]}},{"name":"owner","type":"address"},{"name":"aggregator_user","type":{"map":["address","string"]}},{"name":"certificate","type":{"map":["string","address"]}},{"name":"certificate_people","type":{"map":["address","string"]}},{"name":"all_count","type":"int"},{"name":"all_amount","type":"int"},{"name":"config","type":"VegasMarketContact.config"}]},"type_defs":[{"name":"market","typedef":{"record":[{"name":"market_id","type":"string"},{"name":"owner","type":"address"},{"name":"content","type":"string"},{"name":"source_url","type":"string"},{"name":"answers","type":{"list":["VegasMarketContact.answer"]}},{"name":"create_time","type":"int"},{"name":"over_height","type":"int"},{"name":"max_people","type":"int"},{"name":"min_amount","type":"int"},{"name":"total_amount","type":"int"},{"name":"receive_amount","type":"int"},{"name":"put_count","type":"int"},{"name":"receive_count","type":"int"},{"name":"result","type":"int"},{"name":"progress","type":"int"},{"name":"market_type","type":"int"}]},"vars":[]},{"name":"answer","typedef":{"record":[{"name":"content","type":"string"},{"name":"count","type":"int"}]},"vars":[]},{"name":"market_rocord","typedef":{"record":[{"name":"market_id","type":"string"},{"name":"owner","type":"address"},{"name":"content","type":"string"},{"name":"amount","type":"int"},{"name":"put_result","type":"string"},{"name":"put_result_index","type":"int"},{"name":"put_time","type":"int"},{"name":"put_height","type":"int"}]},"vars":[]},{"name":"market_detail","typedef":{"record":[{"name":"market","type":"VegasMarketContact.market"},{"name":"is_oracle_market_record","type":"bool"},{"name":"is_user_markets_record","type":"bool"},{"name":"get_user_markets_record_result","type":"int"},{"name":"is_user_markets_receive_record","type":"bool"},{"name":"get_oracle_market_record","type":{"map":["address","int"]}},{"name":"get_aggregator_user","type":{"map":["address","string"]}}]},"vars":[]},{"name":"config","typedef":{"record":[{"name":"decimals","type":"int"},{"name":"oracle_trigger_count","type":"int"},{"name":"market_min_height","type":"int"},{"name":"market_max_height","type":"int"},{"name":"market_min_amount","type":"int"},{"name":"market_max_amount","type":"int"},{"name":"record_max_count","type":"int"},{"name":"market_max_people","type":"int"},{"name":"platform_address","type":"address"},{"name":"foundation_address","type":"address"},{"name":"platform_percentage","type":"int"},{"name":"foundation_percentage","type":"int"},{"name":"create_percentage","type":"int"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\npayable main contract VegasMarketContact =\\n  record state = {markets : map(address, map(string, VegasMarketContact.market)),markets_start : map(address, map(string, VegasMarketContact.market)),markets_record : map(address, list(VegasMarketContact.market_rocord)),user_markets_record : map(address, map(string, map(address, int))),user_markets_receive_record : map(address, map(string, map(address, int))),oracle_market : map(string, list(int)),oracle_market_count : map(string, int),oracle_market_record : map(string, map(address, int)),owner : address,aggregator_user : map(address, string),certificate : map(string, address),certificate_people : map(address, string),all_count : int,all_amount : int,config : VegasMarketContact.config}\\n  datatype event = AddMarketEvent(address, string) | SubmitAnswerEvent(address, string, address, int) | ReceiveReward(address, int, int)\\n  record market = {market_id : string,owner : address,content : string,source_url : string,answers : list(VegasMarketContact.answer),create_time : int,over_height : int,max_people : int,min_amount : int,total_amount : int,receive_amount : int,put_count : int,receive_count : int,result : int,progress : int,market_type : int}\\n  record answer = {content : string,count : int}\\n  record market_rocord = {market_id : string,owner : address,content : string,amount : int,put_result : string,put_result_index : int,put_time : int,put_height : int}\\n  record market_detail = {market : VegasMarketContact.market,is_oracle_market_record : bool,is_user_markets_record : bool,get_user_markets_record_result : int,is_user_markets_receive_record : bool,get_oracle_market_record : map(address, int),get_aggregator_user : map(address, string)}\\n  record config = {decimals : int,oracle_trigger_count : int,market_min_height : int,market_max_height : int,market_min_amount : int,market_max_amount : int,record_max_count : int,market_max_people : int,platform_address : address,foundation_address : address,platform_percentage : int,foundation_percentage : int,create_percentage : int}\\n  stateful entrypoint init : () => VegasMarketContact.state\\n  stateful entrypoint add_market : (string, string, int, int, list(VegasMarketContact.answer)) => VegasMarketContact.market\\n  payable stateful entrypoint submit_answer : (address, string, int) => bool\\n  stateful entrypoint stop_market : (address, string) => bool\\n  stateful entrypoint provide_answer : (address, string, int) => bool\\n  stateful entrypoint private_update_market_progress_to_over : (address, string, int) => bool\\n  stateful entrypoint receive_reward : (address, string) => int\\n  stateful entrypoint add_certificate : (string) => unit\\n  stateful entrypoint delete_certificate : (string) => bool\\n  stateful entrypoint add_aggregator_user : (address, string) => address\\n  stateful entrypoint delete_aggregator_user : (address) => bool\\n  stateful entrypoint chagne_owner : (address) => address\\n  stateful entrypoint update_config : (VegasMarketContact.config) => VegasMarketContact.config\\n  entrypoint get_markets_start : (address, bool) => map(string, VegasMarketContact.market)\\n  entrypoint get_markets_referee : () => map(string, VegasMarketContact.market)\\n  entrypoint get_market_detail : (address, string) => VegasMarketContact.market_detail\\n  entrypoint get_all_count : () => int\\n  entrypoint get_all_amount : () => int\\n  entrypoint get_oracle_market_provide_count : (string) => int\\n  entrypoint get_market : (address, string) => VegasMarketContact.market\\n  entrypoint is_user_markets_receive_record : (address, string) => bool\\n  entrypoint is_user_markets_record : (address, string) => bool\\n  entrypoint get_user_markets_record_result : (address, string) => int\\n  entrypoint get_user_markets_record : (address, string) => map(address, int)\\n  entrypoint get_markets_start_size : (address) => int\\n  entrypoint is_oracle_market_record : (string) => bool\\n  entrypoint get_aggregator_user : () => map(address, string)\\n  entrypoint get_oracle_market_record : (string) => map(address, int)\\n  entrypoint get_market_records : (address) => list(VegasMarketContact.market_rocord)\\n  entrypoint get_market_records_size : (address) => int\\n  entrypoint get_config : () => VegasMarketContact.config\\n  entrypoint get_owner : () => address\\n  entrypoint get_state : () => VegasMarketContact.state\\n  entrypoint is_repeat : (list(int)) => bool\\n"}'),f=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"PutNameEvent":["address","string","int","int"]},{"RevokedNameEvent":["address","string"]},{"RaiseNameEvent":["int","int","int"]},{"DealNameEvent":["string","address","address","int"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"AensMarketContact.state","stateful":true},{"arguments":[{"name":"name","type":"string"},{"name":"sig","type":"signature"},{"name":"amount","type":"int"},{"name":"height","type":"int"}],"name":"put_name","payable":true,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"revoked_name","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"raise_name","payable":true,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"deal_name","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_names_order","payable":false,"returns":{"map":["string","AensMarketContact.order"]},"stateful":false},{"arguments":[{"name":"name","type":"string"}],"name":"get_name_order","payable":false,"returns":"AensMarketContact.order","stateful":false},{"arguments":[],"name":"is_caller_exists","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"get_name_records","payable":false,"returns":{"list":["AensMarketContact.order"]},"stateful":false},{"arguments":[{"name":"current_amount","type":"int"}],"name":"get_name_next_raise_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"amount","type":"int"}],"name":"get_name_fee","payable":false,"returns":"AensMarketContact.fees","stateful":false},{"arguments":[{"name":"name","type":"string"}],"name":"get_name_max_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"price","type":"int"}],"name":"format_name_length_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"account","type":"address"},{"name":"name","type":"string"}],"name":"add_tradable_address","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"delete_tradable_address","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"is_tradable_address","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"chagne_owner","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"config","type":"AensMarketContact.config"}],"name":"update_config","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"receive_name_admin","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"receive_balance_admin","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_state","payable":false,"returns":"AensMarketContact.state","stateful":false}],"kind":"contract_main","name":"AensMarketContact","payable":true,"state":{"record":[{"name":"tradable_address","type":{"map":["address","string"]}},{"name":"names_owner","type":{"map":["address","string"]}},{"name":"names_order","type":{"map":["string","AensMarketContact.order"]}},{"name":"names_record","type":{"map":["address",{"list":["AensMarketContact.order"]}]}},{"name":"owner","type":"address"},{"name":"config","type":"AensMarketContact.config"}]},"type_defs":[{"name":"order","typedef":{"record":[{"name":"name","type":"string"},{"name":"old_owner","type":"address"},{"name":"new_owner","type":"address"},{"name":"start_amount","type":"int"},{"name":"left_amount","type":"int"},{"name":"current_amount","type":"int"},{"name":"all_bonus_fee","type":"int"},{"name":"start_height","type":"int"},{"name":"over_height","type":"int"},{"name":"premium_count","type":"int"}]},"vars":[]},{"name":"config","typedef":{"record":[{"name":"max_order_height","type":"int"},{"name":"decimals","type":"int"},{"name":"bonus_fee","type":"int"},{"name":"platform_fee","type":"int"},{"name":"platform_address","type":"address"},{"name":"delay_height","type":"int"},{"name":"record_max_count","type":"int"},{"name":"length_multiple","type":"int"},{"name":"min_premium_percentage","type":"int"}]},"vars":[]},{"name":"fees","typedef":{"record":[{"name":"platform","type":"int"},{"name":"amount","type":"int"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\npayable main contract AensMarketContact =\\n  record state = {tradable_address : map(address, string),names_owner : map(address, string),names_order : map(string, AensMarketContact.order),names_record : map(address, list(AensMarketContact.order)),owner : address,config : AensMarketContact.config}\\n  datatype event = PutNameEvent(address, string, int, int) | RevokedNameEvent(address, string) | RaiseNameEvent(int, int, int) | DealNameEvent(string, address, address, int)\\n  record order = {name : string,old_owner : address,new_owner : address,start_amount : int,left_amount : int,current_amount : int,all_bonus_fee : int,start_height : int,over_height : int,premium_count : int}\\n  record config = {max_order_height : int,decimals : int,bonus_fee : int,platform_fee : int,platform_address : address,delay_height : int,record_max_count : int,length_multiple : int,min_premium_percentage : int}\\n  record fees = {platform : int,amount : int}\\n  stateful entrypoint init : () => AensMarketContact.state\\n  payable stateful entrypoint put_name : (string, signature, int, int) => unit\\n  stateful entrypoint revoked_name : (string) => unit\\n  payable stateful entrypoint raise_name : (string) => unit\\n  stateful entrypoint deal_name : (string) => unit\\n  entrypoint get_names_order : () => map(string, AensMarketContact.order)\\n  entrypoint get_name_order : (string) => AensMarketContact.order\\n  entrypoint is_caller_exists : () => string\\n  entrypoint get_name_records : (address) => list(AensMarketContact.order)\\n  entrypoint get_name_next_raise_price : (int) => int\\n  entrypoint get_name_fee : (int) => AensMarketContact.fees\\n  entrypoint get_name_max_price : (string) => int\\n  entrypoint format_name_length_price : (int) => int\\n  stateful entrypoint add_tradable_address : (address, string) => address\\n  stateful entrypoint delete_tradable_address : (address) => bool\\n  entrypoint is_tradable_address : (address) => string\\n  stateful entrypoint chagne_owner : (address) => address\\n  stateful entrypoint update_config : (AensMarketContact.config) => unit\\n  stateful entrypoint receive_name_admin : (string) => unit\\n  stateful entrypoint receive_balance_admin : (string) => unit\\n  entrypoint get_state : () => AensMarketContact.state\\n"}'),_=JSON.parse('{"encodedAci":{"contract":{"functions":[{"arguments":[{"name":"_1","type":"IAedexV2Factory"},{"name":"_2","type":"IWAE"},{"name":"_3","type":"IAEX9Minimal"}],"name":"init","payable":false,"returns":"AedexV2Router.state","stateful":false},{"arguments":[],"name":"balance","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"factory","payable":false,"returns":"IAedexV2Factory","stateful":false},{"arguments":[],"name":"wae","payable":false,"returns":"IWAE","stateful":false},{"arguments":[],"name":"wae_aex9","payable":false,"returns":"IAEX9Minimal","stateful":false},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"IAEX9Minimal"},{"name":"_3","type":"int"},{"name":"_4","type":"int"},{"name":"_5","type":"int"},{"name":"_6","type":"int"},{"name":"_7","type":"address"},{"name":"_8","type":{"option":["int"]}},{"name":"_9","type":"int"}],"name":"add_liquidity","payable":false,"returns":{"tuple":["AedexV2Router.amount_a","AedexV2Router.amount_b","AedexV2Router.liquidity"]},"stateful":true},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"int"},{"name":"_3","type":"int"},{"name":"_4","type":"int"},{"name":"_5","type":"address"},{"name":"_6","type":{"option":["int"]}},{"name":"_7","type":"int"}],"name":"add_liquidity_ae","payable":true,"returns":{"tuple":["AedexV2Router.amount_token","AedexV2Router.amount_ae","AedexV2Router.liquidity"]},"stateful":true},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"IAEX9Minimal"},{"name":"_3","type":"int"},{"name":"_4","type":"int"},{"name":"_5","type":"int"},{"name":"_6","type":"address"},{"name":"_7","type":"int"}],"name":"remove_liquidity","payable":false,"returns":{"tuple":["AedexV2Router.amount_a","AedexV2Router.amount_b"]},"stateful":true},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"int"},{"name":"_3","type":"int"},{"name":"_4","type":"int"},{"name":"_5","type":"address"},{"name":"_6","type":"int"}],"name":"remove_liquidity_ae","payable":true,"returns":{"tuple":["AedexV2Router.amount_token","AedexV2Router.amount_ae"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"list":["IAEX9Minimal"]}},{"name":"_4","type":"address"},{"name":"_5","type":"int"},{"name":"_6","type":{"option":["IAedexV2Callback"]}}],"name":"swap_exact_tokens_for_tokens","payable":false,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"list":["IAEX9Minimal"]}},{"name":"_4","type":"address"},{"name":"_5","type":"int"},{"name":"_6","type":{"option":["IAedexV2Callback"]}}],"name":"swap_tokens_for_exact_tokens","payable":false,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"list":["IAEX9Minimal"]}},{"name":"_3","type":"address"},{"name":"_4","type":"int"},{"name":"_5","type":{"option":["IAedexV2Callback"]}}],"name":"swap_exact_ae_for_tokens","payable":true,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"list":["IAEX9Minimal"]}},{"name":"_4","type":"address"},{"name":"_5","type":"int"},{"name":"_6","type":{"option":["IAedexV2Callback"]}}],"name":"swap_tokens_for_exact_ae","payable":false,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"list":["IAEX9Minimal"]}},{"name":"_4","type":"address"},{"name":"_5","type":"int"},{"name":"_6","type":{"option":["IAedexV2Callback"]}}],"name":"swap_exact_tokens_for_ae","payable":false,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"list":["IAEX9Minimal"]}},{"name":"_3","type":"address"},{"name":"_4","type":"int"},{"name":"_5","type":{"option":["IAedexV2Callback"]}}],"name":"swap_ae_for_exact_tokens","payable":true,"returns":{"list":["int"]},"stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":"int"}],"name":"quote","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":"int"}],"name":"get_amount_out","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":"int"}],"name":"get_amount_in","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"list":["IAEX9Minimal"]}}],"name":"get_amounts_out","payable":false,"returns":{"list":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"list":["IAEX9Minimal"]}}],"name":"get_amounts_in","payable":false,"returns":{"list":["int"]},"stateful":false}],"kind":"contract_main","name":"AedexV2Router","payable":true,"state":{"record":[{"name":"factory","type":"IAedexV2Factory"},{"name":"wae","type":"IWAE"},{"name":"wae_aex9","type":"IAEX9Minimal"}]},"type_defs":[{"name":"amount_a","typedef":"int","vars":[]},{"name":"amount_b","typedef":"int","vars":[]},{"name":"amount_token","typedef":"int","vars":[]},{"name":"amount_ae","typedef":"int","vars":[]},{"name":"liquidity","typedef":"int","vars":[]}]}},"externalEncodedAci":[{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"}],"name":"deposit_to","payable":true,"returns":"unit","stateful":true},{"arguments":[],"name":"deposit","payable":true,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"transfer","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"withdraw","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IWAE","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[],"name":"meta_info","payable":false,"returns":"IAEX9Minimal.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"IAEX9Minimal.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"transfer","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"create_allowance","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"transfer_allowance","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IAEX9Minimal","payable":false,"type_defs":[{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]}]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"},{"name":"_3","type":"int"}],"name":"aedex_v2_call","payable":false,"returns":"unit","stateful":false}],"kind":"contract_interface","name":"IAedexV2Callback","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[],"name":"fee_to","payable":false,"returns":{"option":["address"]},"stateful":false}],"kind":"contract_interface","name":"IAedexV2FactoryForPair","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"IAedexV2FactoryForPair"},{"name":"_2","type":"IAEX9Minimal"},{"name":"_3","type":"IAEX9Minimal"},{"name":"_4","type":{"option":["int"]}},{"name":"_5","type":{"option":["int"]}}],"name":"init","payable":false,"returns":"void","stateful":false},{"arguments":[],"name":"minimum_liquidity","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"factory","payable":false,"returns":"IAedexV2FactoryForPair","stateful":false},{"arguments":[],"name":"token0","payable":false,"returns":"IAEX9Minimal","stateful":false},{"arguments":[],"name":"token1","payable":false,"returns":"IAEX9Minimal","stateful":false},{"arguments":[],"name":"price0_cumulative_last","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"price1_cumulative_last","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"k_last","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"mint","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"burn","payable":false,"returns":"IAedexV2Pair.amounts","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":"address"},{"name":"_4","type":{"option":["IAedexV2Callback"]}}],"name":"swap","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"skim","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"sync","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_reserves","payable":false,"returns":"IAedexV2Pair.reserves","stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"transfer_allowance","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IAedexV2Pair","payable":false,"type_defs":[{"name":"amounts","typedef":{"record":[{"name":"amount0","type":"int"},{"name":"amount1","type":"int"}]},"vars":[]},{"name":"reserves","typedef":{"record":[{"name":"reserve0","type":"int"},{"name":"reserve1","type":"int"},{"name":"block_timestamp_last","type":"int"}]},"vars":[]}]}},{"contract":{"functions":[{"arguments":[],"name":"fee_to","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[],"name":"fee_to_setter","payable":false,"returns":"address","stateful":false},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"IAEX9Minimal"}],"name":"get_pair","payable":false,"returns":{"option":["IAedexV2Pair"]},"stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"all_pairs","payable":false,"returns":"IAedexV2Pair","stateful":false},{"arguments":[],"name":"all_pairs_length","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"IAEX9Minimal"},{"name":"_2","type":"IAEX9Minimal"},{"name":"_3","type":{"option":["int"]}},{"name":"_4","type":{"option":["int"]}}],"name":"create_pair","payable":false,"returns":"IAedexV2Pair","stateful":true},{"arguments":[{"name":"_1","type":{"option":["address"]}}],"name":"set_fee_to","payable":false,"returns":"unit","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"set_fee_toSetter","payable":false,"returns":"unit","stateful":false}],"kind":"contract_interface","name":"IAedexV2Factory","payable":false,"type_defs":[]}}],"interface":"contract interface IWAE =\\n  payable stateful entrypoint deposit_to : (address) => unit\\n  payable stateful entrypoint deposit : () => unit\\n  stateful entrypoint transfer : (address, int) => unit\\n  stateful entrypoint withdraw : (int) => unit\\n\\ncontract interface IAEX9Minimal =\\n  record allowance_accounts = {from_account : address,for_account : address}\\n  record meta_info = {name : string,symbol : string,decimals : int}\\n  entrypoint meta_info : () => IAEX9Minimal.meta_info\\n  entrypoint total_supply : () => int\\n  entrypoint balance : (address) => option(int)\\n  entrypoint allowance : (IAEX9Minimal.allowance_accounts) => option(int)\\n  stateful entrypoint transfer : (address, int) => unit\\n  stateful entrypoint create_allowance : (address, int) => unit\\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\\n\\ncontract interface IAedexV2Callback =\\n  entrypoint aedex_v2_call : (address, int, int) => unit\\n\\ncontract interface IAedexV2FactoryForPair =\\n  entrypoint fee_to : () => option(address)\\n\\ncontract interface IAedexV2Pair =\\n  record amounts = {amount0 : int,amount1 : int}\\n  record reserves = {reserve0 : int,reserve1 : int,block_timestamp_last : int}\\n  entrypoint balance : (address) => option(int)\\n  entrypoint init : (IAedexV2FactoryForPair, IAEX9Minimal, IAEX9Minimal, option(int), option(int)) => void\\n  entrypoint minimum_liquidity : () => int\\n  entrypoint factory : () => IAedexV2FactoryForPair\\n  entrypoint token0 : () => IAEX9Minimal\\n  entrypoint token1 : () => IAEX9Minimal\\n  entrypoint price0_cumulative_last : () => int\\n  entrypoint price1_cumulative_last : () => int\\n  entrypoint k_last : () => int\\n  stateful entrypoint mint : (address) => int\\n  stateful entrypoint burn : (address) => IAedexV2Pair.amounts\\n  stateful entrypoint swap : (int, int, address, option(IAedexV2Callback)) => unit\\n  stateful entrypoint skim : (address) => unit\\n  stateful entrypoint sync : () => unit\\n  entrypoint get_reserves : () => IAedexV2Pair.reserves\\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\\n\\ncontract interface IAedexV2Factory =\\n  entrypoint fee_to : () => option(address)\\n  entrypoint fee_to_setter : () => address\\n  entrypoint get_pair : (IAEX9Minimal, IAEX9Minimal) => option(IAedexV2Pair)\\n  entrypoint all_pairs : (int) => IAedexV2Pair\\n  entrypoint all_pairs_length : () => int\\n  stateful entrypoint create_pair : (IAEX9Minimal, IAEX9Minimal, option(int), option(int)) => IAedexV2Pair\\n  entrypoint set_fee_to : (option(address)) => unit\\n  entrypoint set_fee_toSetter : (address) => unit\\n\\npayable main contract AedexV2Router =\\n  record state = {factory : IAedexV2Factory,wae : IWAE,wae_aex9 : IAEX9Minimal}\\n  type amount_a = int\\n  type amount_b = int\\n  type amount_token = int\\n  type amount_ae = int\\n  type liquidity = int\\n  entrypoint init : (IAedexV2Factory, IWAE, IAEX9Minimal) => AedexV2Router.state\\n  entrypoint balance : () => int\\n  entrypoint factory : () => IAedexV2Factory\\n  entrypoint wae : () => IWAE\\n  entrypoint wae_aex9 : () => IAEX9Minimal\\n  stateful entrypoint add_liquidity : (IAEX9Minimal, IAEX9Minimal, int, int, int, int, address, option(int), int) => (AedexV2Router.amount_a * AedexV2Router.amount_b * AedexV2Router.liquidity)\\n  payable stateful entrypoint add_liquidity_ae : (IAEX9Minimal, int, int, int, address, option(int), int) => (AedexV2Router.amount_token * AedexV2Router.amount_ae * AedexV2Router.liquidity)\\n  stateful entrypoint remove_liquidity : (IAEX9Minimal, IAEX9Minimal, int, int, int, address, int) => (AedexV2Router.amount_a * AedexV2Router.amount_b)\\n  payable stateful entrypoint remove_liquidity_ae : (IAEX9Minimal, int, int, int, address, int) => (AedexV2Router.amount_token * AedexV2Router.amount_ae)\\n  stateful entrypoint swap_exact_tokens_for_tokens : (int, int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  stateful entrypoint swap_tokens_for_exact_tokens : (int, int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  payable stateful entrypoint swap_exact_ae_for_tokens : (int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  stateful entrypoint swap_tokens_for_exact_ae : (int, int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  stateful entrypoint swap_exact_tokens_for_ae : (int, int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  payable stateful entrypoint swap_ae_for_exact_tokens : (int, list(IAEX9Minimal), address, int, option(IAedexV2Callback)) => list(int)\\n  entrypoint quote : (int, int, int) => int\\n  entrypoint get_amount_out : (int, int, int) => int\\n  entrypoint get_amount_in : (int, int, int) => int\\n  entrypoint get_amounts_out : (int, list(IAEX9Minimal)) => list(int)\\n  entrypoint get_amounts_in : (int, list(IAEX9Minimal)) => list(int)\\n"}'),h=t(7007),b=t(9709),k=t(8406),w=t(5142),A=t(3907),v=t(3593),x=t(6900),M=t(9567),E=t(5941);const I=t(3659),{Base64:V}=t(7702);let C=new b.Z("https://mainnet.aeternity.io"),T=new k.Z({nodes:[{name:"main-net",instance:C}]});var S={name:"AE",data(){return{textdata:"",input:"",formatData:"",msg:"Wait Data Test ..."}},async mounted(){window["channelCall"]=e=>{this.channelCall(e)}},methods:{debug:async function(){let e=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];E.log(e);for(let a=0;a<e.length;a++){let t="winter weasel palace visa left ranch urban "+e[a]+" tunnel afford picture parent";if(!I.validateMnemonic(t)){E.log("mnemonic error:"+t);continue}const n=await I.mnemonicToSeed(t),s=(0,w.sO)(n,0);E.log(s.publicKey)}},formatAmount:async function(e){this.formatData=h.bM(e,18)},channelCall:async function(e){const a=JSON.parse(e);E.log(a),this.msg="Wiat data","aeGetCurrentHeight"==a.name&&this.aeGetCurrentHeight(),"aeGenerateAccount"==a.name&&this.aeGenerateAccount(),"aeSetNodeUrl"==a.name&&this.aeSetNodeUrl(a.params.url),"aeBalance"==a.name&&this.aeBalance(a.params.address),"aeRestoreAccountMnemonic"==a.name&&this.aeRestoreAccountMnemonic(a.params.mnemonic),"aeRestoreAccountSecretKey"==a.name&&this.aeRestoreAccountSecretKey(a.params.secretKey),"aeSpend"==a.name&&this.aeSpend(a.params.secretKey,a.params.receiveAddress,a.params.amount,a.params.payload),"aeAensUpdate"==a.name&&this.aeAensUpdate(a.params.secretKey,a.params.name,a.params.address),"aeAensClaim"==a.name&&this.aeAensClaim(a.params.secretKey,a.params.name),"aeAensTransfer"==a.name&&this.aeAensTransfer(a.params.secretKey,a.params.name,a.params.recipient),"aeAex9TokenBalance"==a.name&&this.aeAex9TokenBalance(a.params.address,a.params.ctAddress),"aeAex9TokenTransfer"==a.name&&this.aeAex9TokenTransfer(a.params.secretKey,a.params.toAddress,a.params.amount,a.params.ctAddress),"aeAex9TokenAllowance"==a.name&&this.aeAex9TokenAllowance(a.params.ctAddress,a.params.address,a.params.forAddress),"aeAex9TokenCreateAllowance"==a.name&&this.aeAex9TokenCreateAllowance(a.params.secretKey,a.params.ctAddress,a.params.forAddress,a.params.amount),"aeVegasgetAggregatorUser"==a.name&&this.aeVegasgetAggregatorUser(a.params.ctAddress),"aeVegasAddMarket"==a.name&&this.aeVegasAddMarket(a.params.secretKey,a.params.ctAddress,a.params.content,a.params.sourceUrl,a.params.minAmount,a.params.overHeight,a.params.results),"aeVegasUpdateConfig"==a.name&&this.aeVegasUpdateConfig(a.params.secretKey,a.params.ctAddress,a.params.config),"aeVegasMarketDetail"==a.name&&this.aeVegasMarketDetail(a.params.ctAddress,a.params.address,a.params.owner,a.params.marketId),"aeVegasMarketStart"==a.name&&this.aeVegasMarketStart(a.params.ctAddress,a.params.address,a.params.isSelf),"aeVegasMarkeReferee"==a.name&&this.aeVegasMarkeReferee(a.params.ctAddress,a.params.address),"aeVegasMarketRecords"==a.name&&this.aeVegasMarketRecords(a.params.ctAddress,a.params.address),"aeVegasSubmitAnswer"==a.name&&this.aeVegasSubmitAnswer(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId,a.params.selectIndex,a.params.amount),"aeVegasProvideAnswer"==a.name&&this.aeVegasProvideAnswer(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId,a.params.selectIndex,a.params.marketType),"aeVegasStopMarket"==a.name&&this.aeVegasStopMarket(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId),"aeVegasReceiveReward"==a.name&&this.aeVegasReceiveReward(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId),"aeAensMarketPutName"==a.name&&this.aeAensMarketPutName(a.params.secretKey,a.params.ctAddress,a.params.name,a.params.amount,a.params.height),"aeAensMarketGetNameMaxPrice"==a.name&&this.aeAensMarketGetNameMaxPrice(a.params.ctAddress,a.params.name),"aeAensMarketIsCallerExists"==a.name&&this.aeAensMarketIsCallerExists(a.params.ctAddress,a.params.address),"aeAensMarketRevokedName"==a.name&&this.aeAensMarketRevokedName(a.params.secretKey,a.params.ctAddress,a.params.name),"aeAensMarketRaiseName"==a.name&&this.aeAensMarketRaiseName(a.params.secretKey,a.params.ctAddress,a.params.name,a.params.amount),"aeAensMarketAddTradableAddress"==a.name&&this.aeAensMarketAddTradableAddress(a.params.secretKey,a.params.ctAddress,a.params.address,a.params.name),"aeAensMarketIsTradableAddress"==a.name&&this.aeAensMarketIsTradableAddress(a.params.ctAddress,a.params.address),"aeAensMarketDealName"==a.name&&this.aeAensMarketDealName(a.params.secretKey,a.params.ctAddress,a.params.name),"aeAensMarketGetNameOrder"==a.name&&this.aeAensMarketGetNameOrder(a.params.ctAddress,a.params.address,a.params.name),"aeAensMarketGetNameNextRaisePrice"==a.name&&this.aeAensMarketGetNameNextRaisePrice(a.params.ctAddress,a.params.address,a.params.leftAmount),"aeAensMarketGetNamesOrder"==a.name&&this.aeAensMarketGetNamesOrder(a.params.ctAddress,a.params.address),"aeAensMarketGetNameRecords"==a.name&&this.aeAensMarketGetNameRecords(a.params.ctAddress,a.params.address),"aeDexSwapExactAeForTokens"==a.name&&this.aeDexSwapExactAeForTokens(a.params.secretKey,a.params.ctAddress,a.params.amountAe,a.params.amountOutTokenMin,a.params.path,a.params.to,a.params.deadline),"aeDexSwapExactTokensForAe"==a.name&&this.aeDexSwapExactTokensForAe(a.params.secretKey,a.params.ctAddress,a.params.amountToken,a.params.amountOutAeMin,a.params.path,a.params.to,a.params.deadline),"aeDexSwapExactTokensForTokens"==a.name&&this.aeDexSwapExactTokensForTokens(a.params.secretKey,a.params.ctAddress,a.params.amountTokenIn,a.params.amountOutTokenMin,a.params.path,a.params.to,a.params.deadline),"aeDexAddLiquidityAe"==a.name&&this.aeDexAddLiquidityAe(a.params.secretKey,a.params.ctAddress,a.params.token,a.params.amountTokenDesired,a.params.amountTokenMin,a.params.amountAeMin,a.params.amountAe,a.params.to,a.params.deadline),"aeDexRemoveLiquidityAe"==a.name&&this.aeDexRemoveLiquidityAe(a.params.secretKey,a.params.ctAddress,a.params.token,a.params.liquidity,a.params.amountTokenMin,a.params.amountAeMin,a.params.to,a.params.deadline),"aeDexAddLiquidity"==a.name&&this.aeDexAddLiquidity(a.params.secretKey,a.params.ctAddress,a.params.tokenA,a.params.tokenB,a.params.amountTokenDesiredA,a.params.amountTokenDesiredB,a.params.amountTokenMinA,a.params.amountTokenMinB,a.params.to,a.params.deadline),"aeDexRemoveLiquidity"==a.name&&this.aeDexRemoveLiquidity(a.params.secretKey,a.params.ctAddress,a.params.tokenA,a.params.tokenB,a.params.liquidity,a.params.amountTokenMinA,a.params.amountTokenMinB,a.params.to,a.params.deadline)},initAeSdk:async function(){},aeAensMarketPutName:async function(e,a,t,n,s){try{const r=(0,A.bp)(e),i=new v.Z({keypair:{secretKey:e,publicKey:r}});await T.addAccount(i,{select:!0});let o=await T.createAensDelegationSignature(a,{name:t}),l=await T.getContractInstance({aci:f,contractAddress:a}),{decodedResult:c}=await l.methods.get_name_max_price(t),d=0;(0,x.dF)(n)>c&&(d=Number(n)/100);const{decodedEvents:m}=await l.methods.put_name(t,o,(0,x.dF)(n),Number(s),{amount:(0,x.dF)(d)});E.log(n),E.log(s),this.responseSucess("aeAensMarketPutName",{decodedEvents:m})}catch(r){this.responseError("aeAensMarketPutName",r.message)}},aeDexSwapExactAeForTokens:async function(e,a,t,n,s,r,i){try{const o=(0,A.bp)(e),l=new v.Z({keypair:{secretKey:e,publicKey:o}});await T.addAccount(l,{select:!0});let c=await T.getContractInstance({aci:_,contractAddress:a}),d=await c.methods.swap_exact_ae_for_tokens((0,x.dF)(n),s,r,i,void 0,{gas:15e4,omitUnknown:!0,amount:(0,x.dF)(t)});this.responseSucess("aeDexSwapExactAeForTokens",{result:d})}catch(o){this.responseError("aeDexSwapExactAeForTokens",o.message)}},aeDexSwapExactTokensForAe:async function(e,a,t,n,s,r,i){try{const o=(0,A.bp)(e),l=new v.Z({keypair:{secretKey:e,publicKey:o}});await T.addAccount(l,{select:!0});let c=await T.getContractInstance({aci:_,contractAddress:a}),d=await c.methods.swap_exact_tokens_for_ae((0,x.dF)(t),(0,x.dF)(n),s,r,i,void 0,{gas:15e4,omitUnknown:!0});this.responseSucess("aeDexSwapExactTokensForAe",{result:d})}catch(o){this.responseError("aeDexSwapExactTokensForAe",o.message)}},aeDexSwapExactTokensForTokens:async function(e,a,t,n,s,r,i){try{const o=(0,A.bp)(e),l=new v.Z({keypair:{secretKey:e,publicKey:o}});await T.addAccount(l,{select:!0});let c=await T.getContractInstance({aci:_,contractAddress:a}),d=await c.methods.swap_exact_tokens_for_tokens((0,x.dF)(t),(0,x.dF)(n),s,r,i,void 0,{gas:15e4,omitUnknown:!0});this.responseSucess("aeDexSwapExactTokensForTokens",{result:d})}catch(o){this.responseError("aeDexSwapExactTokensForTokens",o.message)}},aeDexAddLiquidityAe:async function(e,a,t,n,s,r,i,o,l){try{const c=(0,A.bp)(e),d=new v.Z({keypair:{secretKey:e,publicKey:c}});await T.addAccount(d,{select:!0});let m=await T.getContractInstance({aci:_,contractAddress:a});E.log((0,x.dF)(i));let u=await m.methods.add_liquidity_ae(t,(0,x.dF)(n),(0,x.dF)(s),(0,x.dF)(r),o,1000n,l,{gas:15e4,omitUnknown:!0,amount:(0,x.dF)(i)});this.responseSucess("aeDexAddLiquidityAe",{swapResult:await u.decodedResult,hash:u.hash})}catch(c){this.responseError("aeDexAddLiquidityAe",c.message)}},aeDexAddLiquidity:async function(e,a,t,n,s,r,i,o,l,c){try{const d=(0,A.bp)(e),m=new v.Z({keypair:{secretKey:e,publicKey:d}});await T.addAccount(m,{select:!0});let u=await T.getContractInstance({aci:_,contractAddress:a}),p=await u.methods.add_liquidity(t,n,(0,x.dF)(s),(0,x.dF)(r),(0,x.dF)(i),(0,x.dF)(o),l,1000n,c,{gas:15e4,omitUnknown:!0});this.responseSucess("aeDexAddLiquidity",{swapResult:await p.decodedResult,hash:p.hash})}catch(d){this.responseError("aeDexAddLiquidity",d.message)}},aeDexRemoveLiquidityAe:async function(e,a,t,n,s,r,i,o){try{const l=(0,A.bp)(e),c=new v.Z({keypair:{secretKey:e,publicKey:l}});await T.addAccount(c,{select:!0});let d=await T.getContractInstance({aci:_,contractAddress:a}),m=await d.methods.remove_liquidity_ae(t,(0,x.dF)(n),(0,x.dF)(s),(0,x.dF)(r),i,o,{gas:15e4,omitUnknown:!0});this.responseSucess("aeDexAddLiquidityAe",{swapResult:await m.decodedResult,hash:m.hash})}catch(l){this.responseError("aeDexAddLiquidityAe",l.message)}},aeDexRemoveLiquidity:async function(e,a,t,n,s,r,i,o,l){try{const c=(0,A.bp)(e),d=new v.Z({keypair:{secretKey:e,publicKey:c}});await T.addAccount(d,{select:!0});let m=await T.getContractInstance({aci:_,contractAddress:a}),u=await m.methods.remove_liquidity(t,n,(0,x.dF)(s),(0,x.dF)(r),(0,x.dF)(i),o,l,{gas:15e4,omitUnknown:!0});this.responseSucess("aeDexRemoveLiquidity",{swapResult:await u.decodedResult,hash:u.hash})}catch(c){this.responseError("aeDexRemoveLiquidity",c.message)}},aeAensMarketGetNameMaxPrice:async function(e,a){try{let t=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:n}=await t.methods.get_name_max_price(a);n=h.bM(n,18),this.responseSucess("aeAensMarketGetNameMaxPrice",{amount:n})}catch(t){this.responseError("aeAensMarketGetNameMaxPrice",t.message)}},aeAensMarketIsCallerExists:async function(e,a){try{let t=await T.getContractInstance({aci:f,contractAddress:e});M.vT.pub=a;let{decodedResult:n}=await t.methods.is_caller_exists();this.responseSucess("aeAensMarketIsCallerExists",{maxPrice:n})}catch(t){this.responseError("aeAensMarketIsCallerExists",t.message)}},aeAensMarketRevokedName:async function(e,a,t){try{const n=(0,A.bp)(e),s=new v.Z({keypair:{secretKey:e,publicKey:n}});await T.addAccount(s,{select:!0});let r=await T.getContractInstance({aci:f,contractAddress:a}),{decodedEvents:i}=await r.methods.revoked_name(t);this.responseSucess("aeAensMarketRevokedName",{decodedEvents:i})}catch(n){this.responseError("aeAensMarketRevokedName",n.message)}},aeAensMarketRaiseName:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:f,contractAddress:a}),{decodedEvents:o}=await i.methods.raise_name(t,{amount:(0,x.dF)(n)});this.responseSucess("aeAensMarketRaiseName",{decodedEvents:o})}catch(s){this.responseError("aeAensMarketRaiseName",s.message)}},aeAensMarketDealName:async function(e,a,t){try{const n=(0,A.bp)(e),s=new v.Z({keypair:{secretKey:e,publicKey:n}});await T.addAccount(s,{select:!0});let r=await T.getContractInstance({aci:f,contractAddress:a}),{decodedEvents:i}=await r.methods.deal_name(t);this.responseSucess("aeAensMarketDealName",{decodedEvents:i})}catch(n){this.responseError("aeAensMarketDealName",n.message)}},aeAensMarketAddTradableAddress:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:f,contractAddress:a}),{decodedResult:o}=await i.methods.add_tradable_address(t,n);this.responseSucess("aeAensMarketAddTradableAddress",o)}catch(s){this.responseError("aeAensMarketAddTradableAddress",s.message)}},aeAensMarketIsTradableAddress:async function(e,a){try{M.vT.pub=a;let t=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:n}=await t.methods.is_tradable_address(a);this.responseSucess("aeAensMarketIsTradableAddress",{name:n})}catch(t){this.responseError("aeAensMarketIsTradableAddress",t.message)}},aeAensMarketGetNameNextRaisePrice:async function(e,a,t){try{M.vT.pub=a;let n=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:s}=await n.methods.get_name_next_raise_price(t);s=h.bM(s,18),s=parseInt(s)+1,this.responseSucess("aeAensMarketGetNameNextRaisePrice",s)}catch(n){this.responseError("aeAensMarketGetNameNextRaisePrice",n.message)}},aeAensMarketGetNamesOrder:async function(e,a){try{M.vT.pub=a;let t=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:n}=await t.methods.get_names_order();E.log(n),this.responseSucess("aeAensMarketGetNamesOrder",this.mapToArray(n))}catch(t){this.responseError("aeAensMarketGetNamesOrder",t.message)}},aeAensMarketGetNameOrder:async function(e,a,t){try{M.vT.pub=a;let n=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:s}=await n.methods.get_name_order(t);this.responseSucess("aeAensMarketGetNameOrder",s)}catch(n){this.responseError("aeAensMarketGetNameOrder",n.message)}},aeAensMarketGetNameRecords:async function(e,a){try{M.vT.pub=a;let t=await T.getContractInstance({aci:f,contractAddress:e}),{decodedResult:n}=await t.methods.get_name_records(a);this.responseSucess("aeAensMarketGetNameRecords",n)}catch(t){this.responseError("aeAensMarketGetNameRecords",t.message)}},aeGetCurrentHeight:async function(){try{const e=await T.height();this.responseSucess("aeGetCurrentHeight",{height:e})}catch(e){this.responseError("aeGetCurrentHeight",e.message)}},aeSetNodeUrl:async function(e){try{C=new b.Z(e),T=new k.Z({nodes:[{name:"main-net",instance:C}]}),this.responseSucess("aeSetNodeUrl")}catch(a){this.responseError("aeSetNodeUrl",a.message)}},aeGenerateAccount:async function(){let e=I.generateMnemonic();const a=await I.mnemonicToSeed(e),t=(0,w.sO)(a,0);this.responseSucess("aeGenerateAccount",{mnemonic:e,publicKey:t.publicKey,secretKey:t.secretKey})},aeRestoreAccountMnemonic:async function(e){if(!I.validateMnemonic(e))return void this.responseError("aeRestoreAccountMnemonic","mnemonic validate error");const a=await I.mnemonicToSeed(e),t=(0,w.sO)(a,0);this.responseSucess("aeRestoreAccountMnemonic",{mnemonic:e,publicKey:t.publicKey,secretKey:t.secretKey})},aeRestoreAccountSecretKey:async function(e){try{const a=(0,A.bp)(e);this.responseSucess("aeRestoreAccountSecretKey",{publicKey:a,secretKey:e})}catch(a){this.responseError("aeRestoreAccountSecretKey",a.message)}},aeBalance:async function(e){try{let a=await T.getBalance(e);a=h.bM(a,18),this.responseSucess("aeBalance",{balance:a})}catch(a){this.responseError("aeBalance",a.message)}},aeSpend:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.spend(t,a,{denomination:x.fM.AE,payload:V.decode(n)});this.responseSucess("aeSpend",{hash:i.hash})}catch(s){this.responseError("aeSpend",s.message)}},aeAensUpdate:async function(e,a,t){try{let n=await T.api.getNameEntryByName(a);if(null==n)return void this.responseError("aeAensUpdate","name is not exist");const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}}),i={account_pubkey:t};await T.addAccount(r,{select:!0});let o=await T.aensUpdate(a,i,{});this.responseSucess("aeAensUpdate",{hash:o.hash})}catch(n){this.responseError("aeAensUpdate",n.message)}},aeAensClaim:async function(e,a){let t;try{if(!await this.getNameInfo(a))return void this.responseError("aeAensClaim","Name is registered");t=(0,A.bp)(e);const n=new v.Z({keypair:{secretKey:e,publicKey:t}});await T.addAccount(n,{select:!0});const s=await T.aensPreclaim(a),r=await T.aensClaim(a,s.salt,{verify:!0,waitMined:!1});this.responseSucess("aeAensClaim",{hash:r.hash})}catch(n){this.responseError("aeAensClaim",n.message)}},getNameInfo:async function(e){try{return await T.api.getNameEntryByName(e),!1}catch(a){return!0}},aeAensTransfer:async function(e,a,t){try{let n=await T.api.getNameEntryByName(a);if(null==n)return void this.responseError("aeAensTransfer","name is not exist");const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.aensTransfer(a,t);this.responseSucess("aeAensTransfer",{hash:i.hash})}catch(n){this.responseError("aeAensTransfer",n.message)}},aeAex9TokenBalance:async function(e,a){try{M.vT.pub=e,E.log(e),E.log(a);let t=await T.getContractInstance({aci:y,contractAddress:a}),{decodedResult:n}=await t.methods.meta_info();E.log(n);let{decodedResult:s}=await t.methods.balance(e);if(E.log(s),void 0==s)return void this.responseSucess("aeAex9TokenBalance",{address:e,ctAddress:a,decimals:n.decimals,balance:"0.0"});let r=h.bM(s,n.decimals);this.responseSucess("aeAex9TokenBalance",{address:e,ctAddress:a,decimals:n.decimals,balance:r})}catch(t){this.responseError("aeAex9TokenBalance",t.message)}},aeAex9TokenTransfer:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:y,contractAddress:n}),o=await i.methods.transfer(a,(0,x.dF)(t));this.responseSucess("aeAex9TokenTransfer",{publicKey:s,ctAddress:n,hash:o.hash})}catch(s){this.responseError("aeAex9TokenTransfer",s.message)}},aeAex9TokenCreateAllowance:async function(e,a,t,n){try{t=t.toString().replace("ct_","ak_");const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:y,contractAddress:a}),o=await i.methods.create_allowance(t,(0,x.dF)(n));this.responseSucess("aeAex9TokenCreateAllowance",{hash:o.hash})}catch(s){if(s.message.toString().includes("ALLOWANCE_ALREADY_EXISTENT")){E.log("ALLOWANCE_ALREADY_EXISTENT");try{t=t.toString().replace("ct_","ak_");const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:y,contractAddress:a}),o=await i.methods.change_allowance(t,(0,x.dF)(n));this.responseSucess("aeAex9TokenCreateAllowance",{hash:o.hash})}catch(s){this.responseError("aeAex9TokenCreateAllowance",s.message)}}else this.responseError("aeAex9TokenCreateAllowance",s.message)}},aeAex9TokenAllowance:async function(e,a,t){try{M.vT.pub=a,t=t.toString().replace("ct_","ak_");let n=await T.getContractInstance({aci:y,contractAddress:e}),{decodedResult:s}=await n.methods.meta_info();E.log(s);let{decodedResult:r}=await n.methods.allowance({from_account:a,for_account:t});E.log(r),void 0==r&&(r=0),this.responseSucess("aeAex9TokenAllowance",{currentAllowance:h.bM(r,s.decimals)})}catch(n){this.responseError("aeAex9TokenAllowance",n.message)}},aeVegasgetAggregatorUser:async function(e){try{let a=await T.getContractInstance({aci:g,contractAddress:e}),t=await a.methods.get_aggregator_user(),n=await t.decodedResult;this.responseSucess("aeVegasgetAggregatorUser",this.mapToArray(n))}catch(a){this.responseError("aeVegasgetAggregatorUser",a.message)}},aeVegasUpdateConfig:async function(e,a,t){try{const n=(0,A.bp)(e),s=new v.Z({keypair:{secretKey:e,publicKey:n}});await T.addAccount(s,{select:!0});let r=await T.getContractInstance({aci:g,contractAddress:a});const i=await r.methods.update_config(t);let o=i.decodedResult;this.responseSucess("aeVegasUpdateConfig",o)}catch(n){this.responseError("aeVegasUpdateConfig",n.message)}},aeVegasAddMarket:async function(e,a,t,n,s,r,i){try{const o=(0,A.bp)(e),l=new v.Z({keypair:{secretKey:e,publicKey:o}});await T.addAccount(l,{select:!0});let c=await T.getContractInstance({aci:g,contractAddress:a});const d=await c.methods.add_market(t,n,(0,x.dF)(s),Number(r),i);let m=d.decodedResult;this.responseSucess("aeVegasAddMarket",m)}catch(o){this.responseError("aeVegasAddMarket",o.message)}},aeVegasSubmitAnswer:async function(e,a,t,n,s,r){try{const i=(0,A.bp)(e),o=new v.Z({keypair:{secretKey:e,publicKey:i}});await T.addAccount(o,{select:!0});let l=await T.getContractInstance({aci:g,contractAddress:a});const c=await l.methods.submit_answer(t,n,s,{amount:r.toString()});let d=c.decodedResult;this.responseSucess("aeVegasSubmitAnswer",d)}catch(i){this.responseError("aeVegasSubmitAnswer",i.message)}},aeVegasProvideAnswer:async function(e,a,t,n,s,r){try{const i=(0,A.bp)(e),o=new v.Z({keypair:{secretKey:e,publicKey:i}});await T.addAccount(o,{select:!0});let l,c=await T.getContractInstance({aci:g,contractAddress:a});l=0==r?await c.methods.private_update_market_progress_to_over(t,n,s):await c.methods.provide_answer(t,n,s);let d=l.decodedResult;this.responseSucess("aeVegasProvideAnswer",d)}catch(i){this.responseError("aeVegasProvideAnswer",i.message)}},aeVegasStopMarket:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:g,contractAddress:a});const o=await i.methods.stop_market(t,n);let l=o.decodedResult;this.responseSucess("aeVegasStopMarket",l)}catch(s){this.responseError("aeVegasStopMarket",s.message)}},aeVegasReceiveReward:async function(e,a,t,n){try{const s=(0,A.bp)(e),r=new v.Z({keypair:{secretKey:e,publicKey:s}});await T.addAccount(r,{select:!0});let i=await T.getContractInstance({aci:g,contractAddress:a});const o=await i.methods.receive_reward(t,n);let l=o.decodedResult;this.responseSucess("aeVegasReceiveReward",l)}catch(s){this.responseError("aeVegasReceiveReward",s.message)}},aeVegasMarketStart:async function(e,a,t){try{let n=await T.getContractInstance({aci:g,contractAddress:e});M.vT.pub=a;const{decodedResult:s}=await n.methods.get_markets_start(a,t);E.log(this.mapToArray(s)),this.responseSucess("aeVegasMarketStart",this.mapToArray(s))}catch(n){this.responseError("aeVegasMarketStart",n.message)}},aeVegasMarkeReferee:async function(e,a){try{let t=await T.getContractInstance({aci:g,contractAddress:e});M.vT.pub=a;const{decodedResult:n}=await t.methods.get_markets_referee();E.log(this.mapToArray(n)),this.responseSucess("aeVegasMarkeReferee",this.mapToArray(n))}catch(t){this.responseError("aeVegasMarkeReferee",t.message)}},aeVegasMarketRecords:async function(e,a){try{let t=await T.getContractInstance({aci:g,contractAddress:e});M.vT.pub=a;const{decodedResult:n}=await t.methods.get_market_records(a);E.log(n),this.responseSucess("aeVegasMarketRecords",n)}catch(t){this.responseError("aeVegasMarketRecords",t.message)}},aeVegasMarketDetail:async function(e,a,t,n){try{let s=await T.getContractInstance({aci:g,contractAddress:e});M.vT.pub=a;const{decodedResult:r}=await s.methods.get_market_detail(t,n);r.get_aggregator_user=this.mapToArray(r.get_aggregator_user),r.get_oracle_market_record=this.mapToArray(r.get_oracle_market_record),this.responseSucess("aeVegasMarketDetail",r)}catch(s){this.responseError("aeVegasMarketDetail",s.message)}},responseSucess:async function(e,a){const t={code:200,message:"",name:e,result:a};E.log(JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a)));let n=JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a));this.msg=n,window.flutter_inappwebview.callHandler("channelResultDataJS",n)},responseError:async function(e,a){if(E.log(a),a.toString().includes("is too high, valid nonce is")){let e=a.toString().split("is too high, valid nonce is ")[1];E.log("包含"),E.log(e);let t=await T.address();E.log(t),await T.spend(0,t,{denomination:x.fM.AE,payload:"Clear Nonce last",nonce:e})}const t={code:500,name:e,message:a};let n=JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a));this.msg=n,E.log(t),window.flutter_inappwebview.callHandler("channelResultDataJS",n)},mapToArray(e){var a=[];for(var t in e=this.mapToObject(e),e){var n=e[t];a.push({key:t,value:n})}return a},mapToObject(e){let a=Object.create(null);for(let[t,n]of e)a[t]=n;return a}}},R=t(89);const F=(0,R.Z)(S,[["render",p]]);var K=F;const N={class:"hello"};function q(e,a,t,n,r,o){return(0,s.wg)(),(0,s.iD)("div",N,[(0,s._)("h1",null,(0,i.zw)(t.msg),1)])}var D={name:"CFX",props:{msg:String}};const X=(0,R.Z)(D,[["render",q]]);var P=X,O={name:"App",components:{AE:K,CFX:P}};t(4268);const j=(0,R.Z)(O,[["render",r]]);var z=j;(0,n.ri)(z).mount("#app")},4268:function(e,a,t){var n=t(2271);n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals);var s=t(7037).Z;s("7face770",n,!0,{sourceMap:!1,shadowMode:!1})},8677:function(){},2361:function(){},4616:function(){},5024:function(){}},a={};function t(n){var s=a[n];if(void 0!==s)return s.exports;var r=a[n]={id:n,loaded:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}t.m=e,function(){var e=[];t.O=function(a,n,s,r){if(!n){var i=1/0;for(d=0;d<e.length;d++){n=e[d][0],s=e[d][1],r=e[d][2];for(var o=!0,l=0;l<n.length;l++)(!1&r||i>=r)&&Object.keys(t.O).every((function(e){return t.O[e](n[l])}))?n.splice(l--,1):(o=!1,r<i&&(i=r));if(o){e.splice(d--,1);var c=s();void 0!==c&&(a=c)}}return a}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[n,s,r]}}(),function(){t.n=function(e){var a=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(a,{a:a}),a}}(),function(){t.d=function(e,a){for(var n in a)t.o(a,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:a[n]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){var e={143:0};t.O.j=function(a){return 0===e[a]};var a=function(a,n){var s,r,i=n[0],o=n[1],l=n[2],c=0;if(i.some((function(a){return 0!==e[a]}))){for(s in o)t.o(o,s)&&(t.m[s]=o[s]);if(l)var d=l(t)}for(a&&a(n);c<i.length;c++)r=i[c],t.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return t.O(d)},n=self["webpackChunkbox_wallet_sdk"]=self["webpackChunkbox_wallet_sdk"]||[];n.forEach(a.bind(null,0)),n.push=a.bind(null,n.push.bind(n))}();var n=t.O(void 0,[998],(function(){return t(2492)}));n=t.O(n)})();
//# sourceMappingURL=app.4dd79c3b.js.map