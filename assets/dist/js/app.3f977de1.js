(function(){var e={7952:function(e,a,t){"use strict";var n=t(3862),s=t(3396);function r(e,a,t,n,r,i){const o=(0,s.up)("AE"),d=(0,s.up)("CFX");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(o),(0,s.Wm)(d,{msg:"B"})],64)}var i=t(7139);const o=(0,s._)("br",null,null,-1),d=(0,s._)("br",null,null,-1);function m(e,a,t,r,m,c){return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Uk)((0,i.zw)(m.msg)+" ",1),o,(0,s.wy)((0,s._)("textarea",{rows:"10",cols:"100","onUpdate:modelValue":a[0]||(a[0]=e=>m.textdata=e)},null,512),[[n.nr,m.textdata]]),d,(0,s._)("button",{onClick:a[1]||(a[1]=a=>e.test())},"TEST")])}t(6699);var c=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"Transfer":["address","address","int"]},{"Allowance":["address","address","int"]},{"Burn":["address","int"]},{"Mint":["address","int"]},{"Swap":["address","int"]}]},"functions":[{"arguments":[],"name":"aex9_extensions","payable":false,"returns":{"list":["string"]},"stateful":false},{"arguments":[{"name":"name","type":"string"},{"name":"decimals","type":"int"},{"name":"symbol","type":"string"},{"name":"initial_owner_balance","type":{"option":["int"]}}],"name":"init","payable":false,"returns":"FungibleTokenFull.state","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"FungibleTokenFull.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"balances","payable":false,"returns":"FungibleTokenFull.balances","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[],"name":"swapped","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[],"name":"allowances","payable":false,"returns":"FungibleTokenFull.allowances","stateful":false},{"arguments":[{"name":"allowance_accounts","type":"FungibleTokenFull.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"}],"name":"allowance_for_caller","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"},{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value","type":"int"}],"name":"create_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value_change","type":"int"}],"name":"change_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"}],"name":"reset_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"value","type":"int"}],"name":"burn","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"swap","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"account","type":"address"}],"name":"check_swap","payable":false,"returns":"int","stateful":true}],"kind":"contract_main","name":"FungibleTokenFull","payable":false,"state":{"record":[{"name":"owner","type":"address"},{"name":"total_supply","type":"int"},{"name":"balances","type":"FungibleTokenFull.balances"},{"name":"meta_info","type":"FungibleTokenFull.meta_info"},{"name":"allowances","type":"FungibleTokenFull.allowances"},{"name":"swapped","type":{"map":["address","int"]}}]},"type_defs":[{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]},{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"balances","typedef":{"map":["address","int"]},"vars":[]},{"name":"allowances","typedef":{"map":["FungibleTokenFull.allowance_accounts","int"]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"Option","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\n\\nmain contract FungibleTokenFull =\\n  record state = {owner : address,total_supply : int,balances : FungibleTokenFull.balances,meta_info : FungibleTokenFull.meta_info,allowances : FungibleTokenFull.allowances,swapped : map(address, int)}\\n  datatype event = Transfer(address, address, int) | Allowance(address, address, int) | Burn(address, int) | Mint(address, int) | Swap(address, int)\\n  record meta_info = {name : string,symbol : string,decimals : int}\\n  record allowance_accounts = {from_account : address,for_account : address}\\n  type balances = map(address, int)\\n  type allowances = map(FungibleTokenFull.allowance_accounts, int)\\n  entrypoint aex9_extensions : () => list(string)\\n  entrypoint init : (string, int, string, option(int)) => FungibleTokenFull.state\\n  entrypoint meta_info : () => FungibleTokenFull.meta_info\\n  entrypoint total_supply : () => int\\n  entrypoint owner : () => address\\n  entrypoint balances : () => FungibleTokenFull.balances\\n  entrypoint balance : (address) => option(int)\\n  entrypoint swapped : () => map(address, int)\\n  entrypoint allowances : () => FungibleTokenFull.allowances\\n  entrypoint allowance : (FungibleTokenFull.allowance_accounts) => option(int)\\n  entrypoint allowance_for_caller : (address) => option(int)\\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\\n  stateful entrypoint create_allowance : (address, int) => unit\\n  stateful entrypoint change_allowance : (address, int) => unit\\n  stateful entrypoint reset_allowance : (address) => unit\\n  stateful entrypoint transfer : (address, int) => unit\\n  stateful entrypoint burn : (int) => unit\\n  stateful entrypoint swap : () => unit\\n  stateful entrypoint check_swap : (address) => int\\n"}'),l=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"AddMarketEvent":["address","string"]},{"SubmitAnswerEvent":["address","string","address","int"]},{"ReceiveReward":["address","int","int"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"VegasMarketContact.state","stateful":true},{"arguments":[{"name":"content","type":"string"},{"name":"source_url","type":"string"},{"name":"min_amount","type":"int"},{"name":"over_height","type":"int"},{"name":"answers","type":{"list":["VegasMarketContact.answer"]}}],"name":"add_market","payable":false,"returns":"VegasMarketContact.market","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"answer_index","type":"int"}],"name":"submit_answer","payable":true,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"market_index","type":"int"}],"name":"provide_answer","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"},{"name":"result_index","type":"int"}],"name":"private_update_market_progress_to_over","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"receive_reward","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"add_certificate","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"delete_certificate","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"account","type":"address"},{"name":"name","type":"string"}],"name":"add_aggregator_user","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"delete_aggregator_user","payable":false,"returns":"bool","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"chagne_owner","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"config","type":"VegasMarketContact.config"}],"name":"update_config","payable":false,"returns":"VegasMarketContact.config","stateful":true},{"arguments":[{"name":"market_address","type":"address"},{"name":"is_private","type":"bool"}],"name":"get_markets_start","payable":false,"returns":{"map":["string","VegasMarketContact.market"]},"stateful":false},{"arguments":[],"name":"get_markets_referee","payable":false,"returns":{"map":["string","VegasMarketContact.market"]},"stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_market_detail","payable":false,"returns":"VegasMarketContact.market_detail","stateful":false},{"arguments":[],"name":"get_all_count","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_all_amount","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"get_oracle_market_provide_count","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_market","payable":false,"returns":"VegasMarketContact.market","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"is_user_markets_receive_record","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"is_user_markets_record","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_user_markets_record_result","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_address","type":"address"},{"name":"market_id","type":"string"}],"name":"get_user_markets_record","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[{"name":"market_address","type":"address"}],"name":"get_markets_start_size","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"is_oracle_market_record","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"get_aggregator_user","payable":false,"returns":{"map":["address","string"]},"stateful":false},{"arguments":[{"name":"market_id","type":"string"}],"name":"get_oracle_market_record","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"get_market_records","payable":false,"returns":{"list":["VegasMarketContact.market_rocord"]},"stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"get_market_records_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_config","payable":false,"returns":"VegasMarketContact.config","stateful":false},{"arguments":[],"name":"get_owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"get_state","payable":false,"returns":"VegasMarketContact.state","stateful":false},{"arguments":[{"name":"x#1","type":{"list":["int"]}}],"name":"is_repeat","payable":false,"returns":"bool","stateful":false}],"kind":"contract_main","name":"VegasMarketContact","payable":true,"state":{"record":[{"name":"markets","type":{"map":["address",{"map":["string","VegasMarketContact.market"]}]}},{"name":"markets_start","type":{"map":["address",{"map":["string","VegasMarketContact.market"]}]}},{"name":"markets_record","type":{"map":["address",{"list":["VegasMarketContact.market_rocord"]}]}},{"name":"user_markets_record","type":{"map":["address",{"map":["string",{"map":["address","int"]}]}]}},{"name":"user_markets_receive_record","type":{"map":["address",{"map":["string",{"map":["address","int"]}]}]}},{"name":"oracle_market","type":{"map":["string",{"list":["int"]}]}},{"name":"oracle_market_count","type":{"map":["string","int"]}},{"name":"oracle_market_record","type":{"map":["string",{"map":["address","int"]}]}},{"name":"owner","type":"address"},{"name":"aggregator_user","type":{"map":["address","string"]}},{"name":"certificate","type":{"map":["string","address"]}},{"name":"certificate_people","type":{"map":["address","string"]}},{"name":"all_count","type":"int"},{"name":"all_amount","type":"int"},{"name":"config","type":"VegasMarketContact.config"}]},"type_defs":[{"name":"market","typedef":{"record":[{"name":"market_id","type":"string"},{"name":"owner","type":"address"},{"name":"content","type":"string"},{"name":"source_url","type":"string"},{"name":"answers","type":{"list":["VegasMarketContact.answer"]}},{"name":"create_time","type":"int"},{"name":"over_height","type":"int"},{"name":"max_people","type":"int"},{"name":"min_amount","type":"int"},{"name":"total_amount","type":"int"},{"name":"receive_amount","type":"int"},{"name":"put_count","type":"int"},{"name":"receive_count","type":"int"},{"name":"result","type":"int"},{"name":"progress","type":"int"},{"name":"market_type","type":"int"}]},"vars":[]},{"name":"answer","typedef":{"record":[{"name":"content","type":"string"},{"name":"count","type":"int"}]},"vars":[]},{"name":"market_rocord","typedef":{"record":[{"name":"market_id","type":"string"},{"name":"owner","type":"address"},{"name":"content","type":"string"},{"name":"amount","type":"int"},{"name":"put_result","type":"string"},{"name":"put_result_index","type":"int"},{"name":"put_time","type":"int"},{"name":"put_height","type":"int"}]},"vars":[]},{"name":"market_detail","typedef":{"record":[{"name":"market","type":"VegasMarketContact.market"},{"name":"is_oracle_market_record","type":"bool"},{"name":"is_user_markets_record","type":"bool"},{"name":"get_user_markets_record_result","type":"int"},{"name":"is_user_markets_receive_record","type":"bool"},{"name":"get_oracle_market_record","type":{"map":["address","int"]}},{"name":"get_aggregator_user","type":{"map":["address","string"]}}]},"vars":[]},{"name":"config","typedef":{"record":[{"name":"decimals","type":"int"},{"name":"oracle_trigger_count","type":"int"},{"name":"market_min_height","type":"int"},{"name":"market_max_height","type":"int"},{"name":"market_min_amount","type":"int"},{"name":"market_max_amount","type":"int"},{"name":"record_max_count","type":"int"},{"name":"market_max_people","type":"int"},{"name":"platform_address","type":"address"},{"name":"foundation_address","type":"address"},{"name":"platform_percentage","type":"int"},{"name":"foundation_percentage","type":"int"},{"name":"create_percentage","type":"int"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\npayable main contract VegasMarketContact =\\n  record state = {markets : map(address, map(string, VegasMarketContact.market)),markets_start : map(address, map(string, VegasMarketContact.market)),markets_record : map(address, list(VegasMarketContact.market_rocord)),user_markets_record : map(address, map(string, map(address, int))),user_markets_receive_record : map(address, map(string, map(address, int))),oracle_market : map(string, list(int)),oracle_market_count : map(string, int),oracle_market_record : map(string, map(address, int)),owner : address,aggregator_user : map(address, string),certificate : map(string, address),certificate_people : map(address, string),all_count : int,all_amount : int,config : VegasMarketContact.config}\\n  datatype event = AddMarketEvent(address, string) | SubmitAnswerEvent(address, string, address, int) | ReceiveReward(address, int, int)\\n  record market = {market_id : string,owner : address,content : string,source_url : string,answers : list(VegasMarketContact.answer),create_time : int,over_height : int,max_people : int,min_amount : int,total_amount : int,receive_amount : int,put_count : int,receive_count : int,result : int,progress : int,market_type : int}\\n  record answer = {content : string,count : int}\\n  record market_rocord = {market_id : string,owner : address,content : string,amount : int,put_result : string,put_result_index : int,put_time : int,put_height : int}\\n  record market_detail = {market : VegasMarketContact.market,is_oracle_market_record : bool,is_user_markets_record : bool,get_user_markets_record_result : int,is_user_markets_receive_record : bool,get_oracle_market_record : map(address, int),get_aggregator_user : map(address, string)}\\n  record config = {decimals : int,oracle_trigger_count : int,market_min_height : int,market_max_height : int,market_min_amount : int,market_max_amount : int,record_max_count : int,market_max_people : int,platform_address : address,foundation_address : address,platform_percentage : int,foundation_percentage : int,create_percentage : int}\\n  stateful entrypoint init : () => VegasMarketContact.state\\n  stateful entrypoint add_market : (string, string, int, int, list(VegasMarketContact.answer)) => VegasMarketContact.market\\n  payable stateful entrypoint submit_answer : (address, string, int) => bool\\n  stateful entrypoint provide_answer : (address, string, int) => bool\\n  stateful entrypoint private_update_market_progress_to_over : (address, string, int) => bool\\n  stateful entrypoint receive_reward : (address, string) => int\\n  stateful entrypoint add_certificate : (string) => unit\\n  stateful entrypoint delete_certificate : (string) => bool\\n  stateful entrypoint add_aggregator_user : (address, string) => address\\n  stateful entrypoint delete_aggregator_user : (address) => bool\\n  stateful entrypoint chagne_owner : (address) => address\\n  stateful entrypoint update_config : (VegasMarketContact.config) => VegasMarketContact.config\\n  entrypoint get_markets_start : (address, bool) => map(string, VegasMarketContact.market)\\n  entrypoint get_markets_referee : () => map(string, VegasMarketContact.market)\\n  entrypoint get_market_detail : (address, string) => VegasMarketContact.market_detail\\n  entrypoint get_all_count : () => int\\n  entrypoint get_all_amount : () => int\\n  entrypoint get_oracle_market_provide_count : (string) => int\\n  entrypoint get_market : (address, string) => VegasMarketContact.market\\n  entrypoint is_user_markets_receive_record : (address, string) => bool\\n  entrypoint is_user_markets_record : (address, string) => bool\\n  entrypoint get_user_markets_record_result : (address, string) => int\\n  entrypoint get_user_markets_record : (address, string) => map(address, int)\\n  entrypoint get_markets_start_size : (address) => int\\n  entrypoint is_oracle_market_record : (string) => bool\\n  entrypoint get_aggregator_user : () => map(address, string)\\n  entrypoint get_oracle_market_record : (string) => map(address, int)\\n  entrypoint get_market_records : (address) => list(VegasMarketContact.market_rocord)\\n  entrypoint get_market_records_size : (address) => int\\n  entrypoint get_config : () => VegasMarketContact.config\\n  entrypoint get_owner : () => address\\n  entrypoint get_state : () => VegasMarketContact.state\\n  entrypoint is_repeat : (list(int)) => bool\\n"}'),p=JSON.parse('{"encodedAci":{"contract":{"event":{"variant":[{"PutNameEvent":["address","string","int","int"]},{"RevokedNameEvent":["address","string"]},{"RaiseNameEvent":["int","int","int"]},{"DealNameEvent":["string","address","address","int"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"AensMarketContact.state","stateful":true},{"arguments":[{"name":"name","type":"string"},{"name":"sig","type":"signature"},{"name":"amount","type":"int"},{"name":"height","type":"int"}],"name":"put_name","payable":true,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"revoked_name","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"raise_name","payable":true,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"deal_name","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_names_order","payable":false,"returns":{"map":["string","AensMarketContact.order"]},"stateful":false},{"arguments":[{"name":"name","type":"string"}],"name":"get_name_order","payable":false,"returns":"AensMarketContact.order","stateful":false},{"arguments":[],"name":"is_caller_exists","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"get_name_records","payable":false,"returns":{"list":["AensMarketContact.order"]},"stateful":false},{"arguments":[{"name":"current_amount","type":"int"}],"name":"get_name_next_raise_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"amount","type":"int"}],"name":"get_name_fee","payable":false,"returns":"AensMarketContact.fees","stateful":false},{"arguments":[{"name":"name","type":"string"}],"name":"get_name_max_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"price","type":"int"}],"name":"format_name_length_price","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"account","type":"address"},{"name":"name","type":"string"}],"name":"add_tradable_address","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"addr","type":"address"}],"name":"delete_tradable_address","payable":false,"returns":"bool","stateful":true},{"arguments":[],"name":"is_tradable_address","payable":false,"returns":"string","stateful":false},{"arguments":[{"name":"addr","type":"address"}],"name":"chagne_owner","payable":false,"returns":"address","stateful":true},{"arguments":[{"name":"config","type":"AensMarketContact.config"}],"name":"update_config","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"receive_name_admin","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"name","type":"string"}],"name":"receive_balance_admin","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_state","payable":false,"returns":"AensMarketContact.state","stateful":false}],"kind":"contract_main","name":"AensMarketContact","payable":true,"state":{"record":[{"name":"tradable_address","type":{"map":["address","string"]}},{"name":"names_owner","type":{"map":["address","string"]}},{"name":"names_order","type":{"map":["string","AensMarketContact.order"]}},{"name":"names_record","type":{"map":["address",{"list":["AensMarketContact.order"]}]}},{"name":"owner","type":"address"},{"name":"config","type":"AensMarketContact.config"}]},"type_defs":[{"name":"order","typedef":{"record":[{"name":"name","type":"string"},{"name":"old_owner","type":"address"},{"name":"new_owner","type":"address"},{"name":"start_amount","type":"int"},{"name":"left_amount","type":"int"},{"name":"current_amount","type":"int"},{"name":"all_bonus_fee","type":"int"},{"name":"start_height","type":"int"},{"name":"over_height","type":"int"},{"name":"premium_count","type":"int"}]},"vars":[]},{"name":"config","typedef":{"record":[{"name":"max_order_height","type":"int"},{"name":"decimals","type":"int"},{"name":"bonus_fee","type":"int"},{"name":"platform_fee","type":"int"},{"name":"foundation_fee","type":"int"},{"name":"platform_address","type":"address"},{"name":"foundation_address","type":"address"},{"name":"delay_height","type":"int"},{"name":"record_max_count","type":"int"},{"name":"length_multiple","type":"int"},{"name":"min_premium_percentage","type":"int"}]},"vars":[]},{"name":"fees","typedef":{"record":[{"name":"platform","type":"int"},{"name":"foundation","type":"int"},{"name":"amount","type":"int"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\\n\\n\\npayable main contract AensMarketContact =\\n  record state = {tradable_address : map(address, string),names_owner : map(address, string),names_order : map(string, AensMarketContact.order),names_record : map(address, list(AensMarketContact.order)),owner : address,config : AensMarketContact.config}\\n  datatype event = PutNameEvent(address, string, int, int) | RevokedNameEvent(address, string) | RaiseNameEvent(int, int, int) | DealNameEvent(string, address, address, int)\\n  record order = {name : string,old_owner : address,new_owner : address,start_amount : int,left_amount : int,current_amount : int,all_bonus_fee : int,start_height : int,over_height : int,premium_count : int}\\n  record config = {max_order_height : int,decimals : int,bonus_fee : int,platform_fee : int,foundation_fee : int,platform_address : address,foundation_address : address,delay_height : int,record_max_count : int,length_multiple : int,min_premium_percentage : int}\\n  record fees = {platform : int,foundation : int,amount : int}\\n  stateful entrypoint init : () => AensMarketContact.state\\n  payable stateful entrypoint put_name : (string, signature, int, int) => unit\\n  stateful entrypoint revoked_name : (string) => unit\\n  payable stateful entrypoint raise_name : (string) => unit\\n  stateful entrypoint deal_name : (string) => unit\\n  entrypoint get_names_order : () => map(string, AensMarketContact.order)\\n  entrypoint get_name_order : (string) => AensMarketContact.order\\n  entrypoint is_caller_exists : () => string\\n  entrypoint get_name_records : (address) => list(AensMarketContact.order)\\n  entrypoint get_name_next_raise_price : (int) => int\\n  entrypoint get_name_fee : (int) => AensMarketContact.fees\\n  entrypoint get_name_max_price : (string) => int\\n  entrypoint format_name_length_price : (int) => int\\n  stateful entrypoint add_tradable_address : (address, string) => address\\n  stateful entrypoint delete_tradable_address : (address) => bool\\n  entrypoint is_tradable_address : () => string\\n  stateful entrypoint chagne_owner : (address) => address\\n  stateful entrypoint update_config : (AensMarketContact.config) => unit\\n  stateful entrypoint receive_name_admin : (string) => unit\\n  stateful entrypoint receive_balance_admin : (string) => unit\\n  entrypoint get_state : () => AensMarketContact.state\\n"}'),u=t(7007),g=t(9709),_=t(8406),y=t(3907),f=t(3593),k=t(6900),h=t(9567),b=t(5142),A=t(5941);const w=t(3659),{Base64:M}=t(7702),v=new g.Z("https://testnet.aeternity.io"),C=new _.Z({nodes:[{name:"main-net",instance:v}]});var S={name:"AE",data(){return{textdata:"",msg:"Wait Data Test ..."}},async mounted(){window["channelCall"]=e=>{this.channelCall(e)}},methods:{channelCall:async function(e){const a=JSON.parse(e);A.log(a),this.msg="Wiat data","aeGetCurrentHeight"==a.name&&this.aeGetCurrentHeight(),"aeBalance"==a.name&&this.aeBalance(a.params.address),"aeRestoreAccountMnemonic"==a.name&&this.aeRestoreAccountMnemonic(a.params.mnemonic),"aeRestoreAccountSecretKey"==a.name&&this.aeRestoreAccountSecretKey(a.params.secretKey),"aeSpend"==a.name&&this.aeSpend(a.params.secretKey,a.params.receiveAddress,a.params.amount,a.params.payload),"aeAensUpdate"==a.name&&this.aeAensUpdate(a.params.secretKey,a.params.name),"aeAensClaim"==a.name&&this.aeAensClaim(a.params.secretKey,a.params.name),"aeAensTransfer"==a.name&&this.aeAensTransfer(a.params.secretKey,a.params.name,a.params.recipient),"aeAex9TokenBalance"==a.name&&this.aeAex9TokenBalance(a.params.address,a.params.ctAddress),"aeAex9TokenTransfer"==a.name&&this.aeAex9TokenTransfer(a.params.secretKey,a.params.toAddress,a.params.amount,a.params.ctAddress),"aeVegasgetAggregatorUser"==a.name&&this.aeVegasgetAggregatorUser(a.params.ctAddress),"aeVegasAddMarket"==a.name&&this.aeVegasAddMarket(a.params.secretKey,a.params.ctAddress,a.params.content,a.params.sourceUrl,a.params.minAmount,a.params.overHeight,a.params.results),"aeVegasMarketDetail"==a.name&&this.aeVegasMarketDetail(a.params.ctAddress,a.params.address,a.params.owner,a.params.marketId),"aeVegasMarkeStart"==a.name&&this.aeVegasMarkeStart(a.params.ctAddress,a.params.address,a.params.isSelf),"aeVegasMarkeReferee"==a.name&&this.aeVegasMarkeReferee(a.params.ctAddress,a.params.address),"aeVegasMarkeRecords"==a.name&&this.aeVegasMarkeRecords(a.params.ctAddress,a.params.address),"aeVegasSubmitAnswer"==a.name&&this.aeVegasSubmitAnswer(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId,a.params.selectIndex,a.params.amount),"aeVegasProvideAnswer"==a.name&&this.aeVegasProvideAnswer(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId,a.params.selectIndex,a.params.marketType),"aeVegasReceiveReward"==a.name&&this.aeVegasReceiveReward(a.params.secretKey,a.params.ctAddress,a.params.owner,a.params.marketId),"aeAensMarketPutName"==a.name&&this.aeAensMarketPutName(a.params.secretKey,a.params.ctAddress,a.params.name,a.params.amount,a.params.height),"aeAensMarketGetNameMaxPrice"==a.name&&this.aeAensMarketGetNameMaxPrice(a.params.ctAddress,a.params.name),"aeAensMarketIsCallerExists"==a.name&&this.aeAensMarketIsCallerExists(a.params.ctAddress,a.params.address),"aeAensMarketRevokedName"==a.name&&this.aeAensMarketRevokedName(a.params.secretKey,a.params.ctAddress,a.params.name),"aeAensMarketRaiseName"==a.name&&this.aeAensMarketRaiseName(a.params.secretKey,a.params.ctAddress,a.params.name,a.params.amount),"aeAensMarketAddTradableAddress"==a.name&&this.aeAensMarketAddTradableAddress(a.params.secretKey,a.params.ctAddress,a.params.address,a.params.name),"aeAensMarketIsTradableAddress"==a.name&&this.aeAensMarketIsTradableAddress(a.params.ctAddress,a.params.address),"aeAensMarketDealName"==a.name&&this.aeAensMarketIsTradableAddress(a.params.ctAddress,a.params.address,a.params.name),"aeAensMarketGetNameOrder"==a.name&&this.aeAensMarketGetNameOrder(a.params.ctAddress,a.params.address,a.params.name),"aeAensMarketGetNameNextRaisePrice"==a.name&&this.aeAensMarketGetNameNextRaisePrice(a.params.ctAddress,a.params.address,a.params.leftAmount),"aeAensMarketGetNamesOrder"==a.name&&this.aeAensMarketGetNamesOrder(a.params.ctAddress,a.params.address),"aeAensMarketGetNameRecords"==a.name&&this.aeAensMarketGetNameRecords(a.params.ctAddress,a.params.address)},initAeSdk:async function(){},aeAensMarketPutName:async function(e,a,t,n,s){try{const r=(0,y.bp)(e),i=new f.Z({keypair:{secretKey:e,publicKey:r}});await C.addAccount(i,{select:!0});let o=await C.createAensDelegationSignature(a,{name:t}),d=await C.getContractInstance({aci:p,contractAddress:a}),{decodedResult:m}=await d.methods.get_name_max_price(t),c=0;(0,k.dF)(n)>m&&(c=Number(m)/100);const{decodedEvents:l}=await d.methods.put_name(t,o,(0,k.dF)(n),Number(s),{amount:Number(c)});A.log(n),A.log(s),this.responseSucess("aeAensMarketPutName",{decodedEvents:l})}catch(r){this.responseError("aeAensMarketPutName",r.message)}},aeAensMarketGetNameMaxPrice:async function(e,a){try{let t=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:n}=await t.methods.get_name_max_price(a);n=u.bM(n,18),this.responseSucess("aeAensMarketGetNameMaxPrice",{amount:n})}catch(t){this.responseError("aeAensMarketGetNameMaxPrice",t.message)}},aeAensMarketIsCallerExists:async function(e,a){try{let t=await C.getContractInstance({aci:p,contractAddress:e});h.vT.pub=a;let{decodedResult:n}=await t.methods.is_caller_exists();this.responseSucess("aeAensMarketIsCallerExists",{maxPrice:n})}catch(t){this.responseError("aeAensMarketIsCallerExists",t.message)}},aeAensMarketRevokedName:async function(e,a,t){try{const n=(0,y.bp)(e),s=new f.Z({keypair:{secretKey:e,publicKey:n}});await C.addAccount(s,{select:!0});let r=await C.getContractInstance({aci:p,contractAddress:a}),{decodedEvents:i}=await r.methods.revoked_name(t);this.responseSucess("aeAensMarketRevokedName",{decodedEvents:i})}catch(n){this.responseError("aeAensMarketRevokedName",n.message)}},aeAensMarketRaiseName:async function(e,a,t,n){try{const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.getContractInstance({aci:p,contractAddress:a}),{decodedEvents:o}=await i.methods.raise_name(t,{amount:(0,k.dF)(n)});this.responseSucess("aeAensMarketRaiseName",{decodedEvents:o})}catch(s){this.responseError("aeAensMarketRaiseName",s.message)}},aeAensMarketDealName:async function(e,a,t){try{const n=(0,y.bp)(e),s=new f.Z({keypair:{secretKey:e,publicKey:n}});await C.addAccount(s,{select:!0});let r=await C.getContractInstance({aci:p,contractAddress:a}),{decodedEvents:i}=await r.methods.deal_name(t);this.responseSucess("aeAensMarketRaiseName",{decodedEvents:i})}catch(n){this.responseError("aeAensMarketRaiseName",n.message)}},aeAensMarketAddTradableAddress:async function(e,a,t,n){try{const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.getContractInstance({aci:p,contractAddress:a}),{decodedResult:o}=await i.methods.add_tradable_address(t,n);this.responseSucess("aeAensMarketAddTradableAddress",o)}catch(s){this.responseError("aeAensMarketAddTradableAddress",s.message)}},aeAensMarketIsTradableAddress:async function(e,a){try{h.vT.pub=a;let t=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:n}=await t.methods.is_tradable_address(a);this.responseSucess("aeAensMarketIsTradableAddress",{name:n})}catch(t){this.responseError("aeAensMarketIsTradableAddress",t.message)}},aeAensMarketGetNameOrder:async function(e,a,t){try{h.vT.pub=a;let n=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:s}=await n.methods.get_name_order(t);this.responseSucess("aeAensMarketGetNameOrder",s)}catch(n){this.responseError("aeAensMarketGetNameOrder",n.message)}},aeAensMarketGetNameNextRaisePrice:async function(e,a,t){try{h.vT.pub=a;let n=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:s}=await n.methods.get_name_next_raise_price(t);s=u.bM(s,18),s=parseInt(s)+1,this.responseSucess("aeAensMarketGetNameNextRaisePrice",s)}catch(n){this.responseError("aeAensMarketGetNameNextRaisePrice",n.message)}},aeAensMarketGetNamesOrder:async function(e,a){try{h.vT.pub=a;let t=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:n}=await t.methods.get_names_order();this.responseSucess("aeAensMarketGetNamesOrder",n)}catch(t){this.responseError("aeAensMarketGetNamesOrder",t.message)}},aeAensMarketGetNameRecords:async function(e,a){try{h.vT.pub=a;let t=await C.getContractInstance({aci:p,contractAddress:e}),{decodedResult:n}=await t.methods.get_name_records(a);this.responseSucess("aeAensMarketGetNameRecords",n)}catch(t){this.responseError("aeAensMarketGetNameRecords",t.message)}},aeGetCurrentHeight:async function(){try{const e=await C.height();this.responseSucess("aeGetCurrentHeight",{height:e})}catch(e){this.responseError("aeGetCurrentHeight",e.message)}},aeGenerateAccount:async function(){let e=w.generateMnemonic();const a=await w.mnemonicToSeed(e),t=(0,b.sO)(a,0);this.responseSucess("aeGenerateAccount",{mnemonic:e,publicKey:t.publicKey,secretKey:t.secretKey})},aeRestoreAccountMnemonic:async function(e){if(!w.validateMnemonic(e))return void this.responseError("aeRestoreAccountMnemonic","mnemonic validate error");const a=await w.mnemonicToSeed(e),t=(0,b.sO)(a,0);this.responseSucess("aeRestoreAccountMnemonic",{mnemonic:e,publicKey:t.publicKey,secretKey:t.secretKey})},aeRestoreAccountSecretKey:async function(e){try{const a=(0,y.bp)(e);this.responseSucess("aeRestoreAccountSecretKey",{publicKey:a,secretKey:e})}catch(a){this.responseError("aeRestoreAccountSecretKey",a.message)}},aeBalance:async function(e){try{let a=await C.getBalance(e);a=u.bM(a,18),this.responseSucess("aeBalance",{balance:a})}catch(a){this.responseError("aeBalance",a.message)}},aeSpend:async function(e,a,t,n){try{const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.spend(t,a,{denomination:k.fM.AE,payload:M.decode(n)});this.responseSucess("aeSpend",{hash:i.hash})}catch(s){this.responseError("aeSpend",s.message)}},aeAensUpdate:async function(e,a){try{let t=await C.api.getNameEntryByName(a);if(null==t)return void this.responseError("aeAensUpdate","name is not exist");const n=(0,y.bp)(e),s=new f.Z({keypair:{secretKey:e,publicKey:n}}),r={account_pubkey:n};await C.addAccount(s,{select:!0});let i=await C.aensUpdate(a,r,{});this.responseSucess("aeAensUpdate",{hash:i.hash})}catch(t){this.responseError("aeAensUpdate",t.message)}},aeAensClaim:async function(e,a){let t;try{if(!await this.getNameInfo(a))return void this.responseError("aeAensClaim","Name is registered");t=(0,y.bp)(e);const n=new f.Z({keypair:{secretKey:e,publicKey:t}});await C.addAccount(n,{select:!0});const s=await C.aensPreclaim(a),r=await C.aensClaim(a,s.salt,{verify:!0,waitMined:!1});this.responseSucess("aeAensClaim",{hash:r.hash})}catch(n){this.responseError("aeAensClaim",n.message)}},getNameInfo:async function(e){try{return await C.api.getNameEntryByName(e),!1}catch(a){return!0}},aeAensTransfer:async function(e,a,t){try{let n=await C.api.getNameEntryByName(a);if(null==n)return void this.responseError("aeAensTransfer","name is not exist");const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.aensTransfer(a,t);this.responseSucess("aeAensTransfer",{hash:i.hash})}catch(n){this.responseError("aeAensTransfer",n.message)}},aeAex9TokenBalance:async function(e,a){try{let t=await C.getContractInstance({aci:c,contractAddress:a}),n=await t.methods.meta_info(),s=await n.decodedResult,r=await t.methods.balance(e),i=await r.decodedResult,o=u.bM(i,s.decimals);this.responseSucess("aeAex9TokenBalance",{address:e,ctAddress:a,decimals:s.decimals,balance:o})}catch(t){this.responseError("aeAex9TokenBalance",t.message)}},aeAex9TokenTransfer:async function(e,a,t,n){try{const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.getContractInstance({aci:c,contractAddress:n}),o=await i.methods.transfer(a,(0,k.dF)(t),{waitMined:!1});this.responseSucess("aeAex9TokenTransfer",{publicKey:s,ctAddress:n,hash:o.hash})}catch(s){this.responseError("aeAex9TokenBalance",s.message)}},aeVegasgetAggregatorUser:async function(e){try{let a=await C.getContractInstance({aci:l,contractAddress:e}),t=await a.methods.get_aggregator_user(),n=await t.decodedResult;this.responseSucess("aeVegasgetAggregatorUser",this.mapToArray(n))}catch(a){this.responseError("aeVegasgetAggregatorUser",a.message)}},aeVegasAddMarket:async function(e,a,t,n,s,r,i){try{const o=(0,y.bp)(e),d=new f.Z({keypair:{secretKey:e,publicKey:o}});await C.addAccount(d,{select:!0});let m=await C.getContractInstance({aci:l,contractAddress:a});const c=await m.methods.add_market(t,n,(0,k.dF)(s),Number(r),i);let p=c.decodedResult;this.responseSucess("aeVegasAddMarket",p)}catch(o){this.responseError("aeVegasAddMarket",o.message)}},aeVegasSubmitAnswer:async function(e,a,t,n,s,r){try{const i=(0,y.bp)(e),o=new f.Z({keypair:{secretKey:e,publicKey:i}});await C.addAccount(o,{select:!0});let d=await C.getContractInstance({aci:l,contractAddress:a});const m=await d.methods.submit_answer(t,n,s,{amount:r.toString()});let c=m.decodedResult;this.responseSucess("aeVegasSubmitAnswer",c)}catch(i){this.responseError("aeVegasSubmitAnswer",i.message)}},aeVegasProvideAnswer:async function(e,a,t,n,s,r){try{const i=(0,y.bp)(e),o=new f.Z({keypair:{secretKey:e,publicKey:i}});await C.addAccount(o,{select:!0});let d,m=await C.getContractInstance({aci:l,contractAddress:a});d=0==r?await m.methods.private_update_market_progress_to_over(t,n,s):await m.methods.provide_answer(t,n,s);let c=d.decodedResult;this.responseSucess("aeVegasProvideAnswer",c)}catch(i){this.responseError("aeVegasProvideAnswer",i.message)}},aeVegasReceiveReward:async function(e,a,t,n){try{const s=(0,y.bp)(e),r=new f.Z({keypair:{secretKey:e,publicKey:s}});await C.addAccount(r,{select:!0});let i=await C.getContractInstance({aci:l,contractAddress:a});const o=await i.methods.receive_reward(t,n);let d=o.decodedResult;this.responseSucess("aeVegasReceiveReward",d)}catch(s){this.responseError("aeVegasReceiveReward",s.message)}},aeVegasMarkeStart:async function(e,a,t){try{let n=await C.getContractInstance({aci:l,contractAddress:e});h.vT.pub=a;const{decodedResult:s}=await n.methods.get_markets_start(a,t);A.log(this.mapToArray(s)),this.responseSucess("aeVegasMarkeStart",this.mapToArray(s))}catch(n){this.responseError("aeVegasMarkeStart",n.message)}},aeVegasMarkeReferee:async function(e,a){try{let t=await C.getContractInstance({aci:l,contractAddress:e});h.vT.pub=a;const{decodedResult:n}=await t.methods.get_markets_referee();A.log(this.mapToArray(n)),this.responseSucess("aeVegasMarkeReferee",this.mapToArray(n))}catch(t){this.responseError("aeVegasMarkeReferee",t.message)}},aeVegasMarkeRecords:async function(e,a){try{let t=await C.getContractInstance({aci:l,contractAddress:e});h.vT.pub=a;const{decodedResult:n}=await t.methods.get_market_records(a);A.log(n),this.responseSucess("aeVegasMarkeRecords",n)}catch(t){this.responseError("aeVegasMarkeRecords",t.message)}},aeVegasMarketDetail:async function(e,a,t,n){try{let s=await C.getContractInstance({aci:l,contractAddress:e});h.vT.pub=a;const{decodedResult:r}=await s.methods.get_market_detail(t,n);r.get_aggregator_user=this.mapToArray(r.get_aggregator_user),r.get_oracle_market_record=this.mapToArray(r.get_oracle_market_record),this.responseSucess("aeVegasMarketDetail",r)}catch(s){this.responseError("aeVegasMarketDetail",s.message)}},responseSucess:async function(e,a){const t={code:200,message:"",name:e,result:a};A.log(JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a))),this.msg=JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a))},responseError:async function(e,a){if(A.log(a),a.toString().includes("is too high, valid nonce is")){let e=a.toString().split("is too high, valid nonce is ")[1];A.log("包含"),A.log(e);let t=await C.address();A.log(t),await C.spend(0,t,{denomination:k.fM.AE,payload:"Clear Nonce last",nonce:e})}const t={code:500,name:e,message:a};this.msg=JSON.stringify(t,((e,a)=>"bigint"===typeof a?a.toString():a)),A.log(t)},mapToArray(e){var a=[];for(var t in e=this.mapToObject(e),e){var n=e[t];a.push({key:t,value:n})}return a},mapToObject(e){let a=Object.create(null);for(let[t,n]of e)a[t]=n;return a}}},T=t(89);const V=(0,T.Z)(S,[["render",m]]);var R=V;const x={class:"hello"};function N(e,a,t,n,r,o){return(0,s.wg)(),(0,s.iD)("div",x,[(0,s._)("h1",null,(0,i.zw)(t.msg),1)])}var E={name:"CFX",props:{msg:String}};const K=(0,T.Z)(E,[["render",N]]);var F=K,I={name:"App",components:{AE:R,CFX:F}};const O=(0,T.Z)(I,[["render",r]]);var G=O;(0,n.ri)(G).mount("#app")},8677:function(){},2361:function(){},4616:function(){},5024:function(){}},a={};function t(n){var s=a[n];if(void 0!==s)return s.exports;var r=a[n]={id:n,loaded:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}t.m=e,function(){var e=[];t.O=function(a,n,s,r){if(!n){var i=1/0;for(c=0;c<e.length;c++){n=e[c][0],s=e[c][1],r=e[c][2];for(var o=!0,d=0;d<n.length;d++)(!1&r||i>=r)&&Object.keys(t.O).every((function(e){return t.O[e](n[d])}))?n.splice(d--,1):(o=!1,r<i&&(i=r));if(o){e.splice(c--,1);var m=s();void 0!==m&&(a=m)}}return a}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[n,s,r]}}(),function(){t.n=function(e){var a=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(a,{a:a}),a}}(),function(){t.d=function(e,a){for(var n in a)t.o(a,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:a[n]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){var e={143:0};t.O.j=function(a){return 0===e[a]};var a=function(a,n){var s,r,i=n[0],o=n[1],d=n[2],m=0;if(i.some((function(a){return 0!==e[a]}))){for(s in o)t.o(o,s)&&(t.m[s]=o[s]);if(d)var c=d(t)}for(a&&a(n);m<i.length;m++)r=i[m],t.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return t.O(c)},n=self["webpackChunkbox_wallet_sdk"]=self["webpackChunkbox_wallet_sdk"]||[];n.forEach(a.bind(null,0)),n.push=a.bind(null,n.push.bind(n))}();var n=t.O(void 0,[998],(function(){return t(7952)}));n=t.O(n)})();
//# sourceMappingURL=app.3f977de1.js.map